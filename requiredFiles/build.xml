<?xml version="1.0"?>

<!--
         (C) Copyright 2005-2008 by justdial!. All Rights Reserved.

         This software is the proprietary information of justdial.com
         Use is subject to license terms.
         justdial! - http://www.justdial.com
        -->
<!-- Test -->

<project name="b2bjustdial" basedir="." default="help">

<!--	<import file="tools/jd-printing/build.xml"/>     -->

	<property file="build_local.properties" />
	<property file="build_default.properties" />
	<property file="cms_build.properties"/>

	<property name="admin.dist.dir" value="justdial-admin-web/target" />
	<property name="job.dist.dir" value="justdial-job-processor/target" />
	<property name="pos.dist.dir" value="justdial-pos-sync/target" />
	<property name="posServer.dist.dir" value="justdial-pos-server/target" />
	<property name="web.dist.dir" value="justdial-web/target" />
	<property name="scheduler.dist.dir" value="justdial-scheduler/target" />
	<property name="solr.dist.dir" value="solr/target" />
	<property name="admin.src.dir" value="justdial-admin-web/src/main/resources" />
	<property name="static.src.dir" value="${@@STATIC_SRC_DIR@@}" />
	<property name="static.dist.dir" value="${@@STATIC_SRC_DIR@@}/target" />
	
	<property name="php.src.dir" value="${@@PHP_SRC_DIR@@}" />

	<property name="config.src.dir" value="justdial-config/src/main/resources" />
	<property environment="env" />
	<property name="mvn" value="${@@MVN_COMMAND@@}" />
	<property name="comingSoon" value="${@@COMINGSOON_DEPLOY_DIR@@}" />
	<property name="skipTest" value="false" />
	<property name="firstattempt" value="true" />
	<property name="skipnodeStart" value="true" />
	<property name="isThisLiveServer" value="${@@IS.THIS.LIVE.SERVER@@}" />
	<property name="posServer.target.dir" value="justdial-pos-server/target" />
	<property name="pos.server.installation.dir" value="${@@POS_DEPLOYMENT_DIR@@}/pos-deployment-dir/PosServer" />
	<property name="pos.printer.installation.dir" value="${@@POS_DEPLOYMENT_DIR@@}/pos-deployment-dir/Printer" />
    <property name="APICACHED" value="-CACHED-ver" />
	<property name="git.src.dir" value="${@@GIT.SRC.DIR@@}" />
	<property name="omni.src.dir" value="${@@OMNI_SRC_DIR@@}" />  
	
	<tstamp>
		<format property="current.time" pattern="MM-dd-yyyy_hh-mm-ss" />
		<format property="current.epoc" pattern="MMddyyyyhhmmss" />
		<format property="current_apitime" pattern="ddMMyy-HHmm" />
	</tstamp>


	<target name="help">
		<echo message="-------------------------------------------" />
		<echo message="Available targets are" />
		<echo message="-------------------------------------------" />
		<echo message="clean  : Cleans  the project temp data" />
		<echo message="deploy : Deply admin,web and scheduler apps[To skip Junit test-case: deploy -DskipTest=true]" />
		<echo message="package deploy-admin : Deply admin app [To skip Junit test-case: package deploy-admin -DskipTest=true]" />
		<echo message="package deploy-web : Deply web app [To skip Junit test-case: package deploy-web  -DskipTest=true]" />
		<echo message="package deploy-scheduler : Deply scheduler app [To skip Junit test-case: package deploy-scheduler -DskipTest=true]" />
		<echo message="deploy-comingSoon  : Deploy comingSoon project" />
		<echo message="customize-wordpress : Customize wordpress and Deploy it in ${@@CMS_HOME_DIR@@}." />
		<echo message="wp-db : Will manage database activity for wordpress[dump | scripts]"/>
		<echo message="config-solr : Will generate solr war file"/>
		<echo message="config-solr : Example=>ant config-solr -Du=root -Dp=root -Dh=localhost -DP=3306 -Ddb=test"/>
		<echo message="config-db : start with database Dump and then create new database for ${ant.project.name}."/>
		<echo message="mysql-misc : Will recreating all mysql procedures/functions,events and triggers etc."/>
		<echo message="db-patch  : Interactive SQLPatchRunner script which will create Cpathc.sql and ask u before applying to DB[support unix os family]"/>
		<echo message="run-patch : Try to apply all the changes from Cpatch.sql to ${@@MYSQL.SCHEMA@@} DB."/>
		<echo message="new-resinInstance : Will create new resin instance for you."/>
		<echo message="solr-fullImport : Will import full data[Product, Keyword, PUV, Location, Supplier]." />
		<echo message="deploy-solr-core : It will deploy all the solr cores to the solr_home directory. It will also perform token replacement to specify which database solr would point to." />
		<echo message="deploy-solr-war : It deploys solr war file to the specified solr deploy directory." />
		<echo message="tomcat-start : Starts tomcat." />
		<echo message="tomcat-stop : Stops tomcat if running." />
		<echo message="check-port : Checks whether tomcat is running by checking the port specified." />
		<echo message="svn-revert : Performs svn revert on ${admin.src.dir} and ${config.src.dir}." />
		<echo message="eclipse-config : Discontinued. Use replace-config instead. svn-revert would be performed internally by replace-config." />
		<echo message="deploy-static : To deploy static files at Static Home Directory" />
		<echo message="deploy-services : To deploy services in Tomcat Directory" />
		<echo message="replace-config: Performs svn revert on ${admin.src.dir} and ${config.src.dir} and token replacement." />
		<echo message="nodejs-minify: To minify css and js files after deploying static files." />
		<echo message="--------------------------------------------" />
	</target>

	<target name="build-static">
		
 	   <exec executable="/usr/bin/svn" output="svn-revision.jsp" failonerror="false">
			<arg line="info"/>
		</exec>

		<exec executable="/bin/grep" input="svn-revision.jsp" output="svn-revision.jsp" failonerror="false">
			<arg line="'Last Changed Rev'" />
		</exec>

		<exec executable="/bin/sed" input="svn-revision.jsp" outputproperty="srev" failonerror="false">
			<arg line="'s/[a-zA-Z: ]*//'" />
		</exec>

		<echo message="Deploying SVN revision: ${srev}" />

		<copy file="svn-revision.jsp" todir="${web.dist.dir}/justdial-web/"  overwrite="true" />
 		<copy file="svn-revision.jsp" todir="${admin.dist.dir}/justdial-admin-web/"  overwrite="true" />

   <copy todir="${static.dist.dir}/" overwrite="true" >
			<fileset dir="${static.src.dir}/">
<!--			<different targetdir="${admin.dist.dir}/justdial-admin-web/" ignoreFileTimes="true"/>   -->
			<include name="supplierLogin.htm"/>
			<include name="JustDialHome/**"/>
			<include name="scripts/**"/>
			<include name="static/**"/>
			<exclude name="static/php/**"/>
			<include name="WEB-INF/**"/>
			<include name="nodeJs/**"/>
<!--			<exclude name="META-INF/**"/>
			<exclude name="WEB-INF/**"/>
			<exclude name="errorpages/**"/>
			<exclude name="includes/**"/>     -->
			</fileset>
		</copy>   
<!--		<exec executable="/usr/bin/rsync">
		  <arg value="-rz" />
		  <arg value="${static.src.dir}/" />
		  <arg value="${admin.dist.dir}/justdial-admin-web/" />
		</exec>  --> 
		<property name="time" value=""/>
		<replace dir="${static.dist.dir}/">
			<include name="*.htm"/>
			<include name="JustDialHome/**"/>
  			<include name="scripts/**"/>
			<include name="static/**"/>
			<include name="WEB-INF/pages/**"/>
			<replacefilter token="@@srev@@" value="${srev}${time}"/>
			<replacefilter token="@@API_REV@@" value="${srev}-${current_apitime}${APICACHED}"/>
		</replace>

		<replace dir="${static.dist.dir}/">
			
			
			<include name="static/styles/website/css/jquery-ui.css"/>
			<include name="static/styles/website/css/grocery/grocery.css"/>
			<include name="static/styles/website/css/grocery/footer.css"/>
			<include name="static/styles/website/css/imageplugin/jquery.ad-gallery.css"/>
			<include name="static/scripts/website/common.js"/>
			<include name="static/JdOmniHome/mobile/config/Services.js"/>
			<include name="static/gulp_tasks/webstore_gulpfile.js"/>

			<replacefilter token="@@STATICIMG_DOMAIN@@" value="${@@STATICIMG_DOMAIN@@}"/>
			<replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
			<replacefilter token="@@STORE_LOGO_IMAGE_BASE_PATH@@" value="${@@STORE_LOGO_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@GROUPS_IMAGE_BASE_PATH@@" value="${@@GROUPS_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@GIT_SRC_DIR@@" value="${@@GIT.SRC.DIR@@}"/>
		</replace>
		
		<echo message="Replacing tokens for cookieless static domains..."/>

		<replace dir="${static.dist.dir}/static/scripts/libs/">
			<include name="**/*.*"/>
			<replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}"/>
			<replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}"/>
			<replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}"/>
			<replacefilter token="@@staticIp4@@" value="${@@STATIC_IP4@@}"/>
			<replacefilter token="@@staticIp5@@" value="${@@STATIC_IP5@@}"/>
		</replace>
		
		<echo message="Replacing tokens for mobile app..."/>
		<replace file="${static.dist.dir}/static/config/mobileVendorApp.json">
			<replacefilter token="@@domain-url@@" value="${@@HTTP_PROTOCOL@@}://static1.${@@PROJECT_URL@@}"/>
			<replacefilter token="@@domain-service-url@@" value="${@@SERVICE_URL@@}"/>
		</replace>
		<replace file="${static.dist.dir}/static/mobile/grocery-app/www/js/loaderjs.js">
			<replacefilter token="@@domain-url@@" value="${@@HTTP_PROTOCOL@@}://static1.${@@PROJECT_URL@@}"/>
		</replace>
		<replace file="${static.dist.dir}/static/mobile/grocery-app/www/mobile.html">
			<replacefilter token="@@domain-url@@" value="${@@HTTP_PROTOCOL@@}://static1.${@@PROJECT_URL@@}"/>
		</replace>
		<replace file="${static.dist.dir}/JustDialHome/js/angularHome.js">
			<replacefilter token="@@SHOP_URL@@" value="${@@SHOP_URL@@}"/>
			<replacefilter token="@@SHOP_JD_URL@@" value="${@@SHOP_JD_URL@@}"/>
			<replacefilter token="@@CMS_SHOP_URL@@" value="${@@CMS_SHOP_URL@@}"/>
		</replace>
		<replace file="${static.dist.dir}/static/php/new_website/tools/js/grocery_new.js">
			<replacefilter token="@@LIVE_URL@@" value="${@@LIVE_URL@@}"/>
		</replace>
		<replace file="${static.dist.dir}/static/scripts/common/utills.js">
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@STORE_LOGO_IMAGE_BASE_PATH@@" value="${@@STORE_LOGO_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@GROUPS_IMAGE_BASE_PATH@@" value="${@@GROUPS_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		    <replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
		</replace>
		<replace file="${static.dist.dir}/scripts/um/searchUserAccount.js">
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		</replace>

		<replace file="${static.dist.dir}/static/mobile/grocery-app/www/js/utills.js">
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		    <replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
		</replace>
		<replace file="${static.dist.dir}/static/php/new_website/tools/js/grocery_new.js">
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		    <replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>

		</replace>

                <replace file="${static.dist.dir}/static/scripts/initialize.js">
                        <replacefilter token="@@production@@" value="true"/>
                        <replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
                        <replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}"/>
                        <replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}"/>
                        <replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@HTTPSFLAG@@" value="${@@HTTPSFLAG@@}"/>
			<replacefilter token="@@SERVICE_URL@@" value="${@@SERVICE_URL@@}"/>
                </replace>

<copy todir="${static.dist.dir}/" force="true" overwrite="true">
<fileset dir="${static.src.dir}/">
<include name="gis/**" />
<include name="images/**" />
 <include name="less/**" />
 <include name="other/**" />
 <include name="styles/**" />
 <include name="searchUser/**" />
 <include name="templates/**" />
 <include name="index.htm" />
 <include name="firebase-messaging-sw.js" />
</fileset>
</copy>
	</target>

<target name="deploy-static" depends="get-svn-revision">
		<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
		<pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
		</classpath>
		</taskdef>
		 <condition property="osheen" else="false">
		 <isset property="include"/>
		 </condition>
		 <if>
		 <equals arg1="${osheen}" arg2="false"/>
		 <then>
		
		<echo message="Deploying static files..."/>
		<copy todir="${@@STATIC_HOME@@}" force="true" overwrite="true">
			<fileset dir="${static.src.dir}/">
				<include name="gis/**" />
				<include name="images/**" />
				<include name="less/**" />
				<include name="other/**" />
      		<!--		<include name="scripts/**" />   -->
		<!--		<include name="JustDialHome/**" />  -->
				<include name="styles/**" /> 
				<include name="searchUser/**" />
				<!--<include name="LoadBalancer_HealthCheck.php" />-->
		<!--		<include name="static/**" />   -->
				<include name="templates/**" />
				<include name="index.htm" />
    		<!--		<include name="supplierLogin.htm" /> -->
				<include name="firebase-messaging-sw.js" />
			</fileset>
		</copy>
		</then>
		<else>
	        <echo message="-------------------NOT COPYING T /var/www/------------------" />
                <copy todir="${@@STATIC_HOME2@@}" force="true" overwrite="true">
                <fileset dir="${static.src.dir}/">
                <include name="gis/**" />
                <include name="images/**" />
                <include name="less/**" />
                <include name="other/**" />
                <include name="styles/**" />
                <include name="searchUser/**" />
                <include name="templates/**" />
                <include name="index.htm" />
                <include name="firebase-messaging-sw.js" />
                </fileset>
                </copy>
                </else>
                </if>

<!--		<antcall target="nodejs-minify" />   -->
	</target>
			

	<target name="deploy-services" >
		<echo message="Deploying services..."/>
		<delete dir="${@@ADMIN_DEPLOY_DIR@@}"/>
		<copy todir="${@@ADMIN_DEPLOY_DIR@@}">
			<fileset dir="${admin.dist.dir}/justdial-admin-web/">
				<include name="WEB-INF/**" />
				<include name="includes/**" />
				<include name="errorpages/**" />
				<include name="META-INF/**" />
				<include name="index.jsp" />
				<include name="LoadBalancer_HealthCheck.jsp" />
				<include name="svn-revision.jsp" />
			</fileset>
		</copy>
			
	</target>

	<!--Start Tomcat-->

	<target name="tomcat-start" >
		<echo message="Tomcat is starting..."/>
		<java jar="${@@TOMCAT_HOME_DIR@@}/bin/bootstrap.jar" fork="true" spawn="true" >
			<sysproperty key="file.encoding" value="UTF-8"/>
			<jvmarg value="-Dcatalina.home=${@@TOMCAT_HOME_DIR@@}"/>
			<jvmarg value="-Dcatalina.base=${@@TOMCAT_HOME_DIR@@}" />
			<jvmarg value="-Djava.util.logging.config.file=${@@TOMCAT_HOME_DIR@@}/conf/logging.properties" />
			<jvmarg value="-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager" />
			<jvmarg value="-Djava.endorsed.dirs=${@@TOMCAT_HOME_DIR@@}/endorsed" />
			<jvmarg value="-Djava.io.tmpdir=${@@TOMCAT_HOME_DIR@@}/temp" />
			<jvmarg value="-Xms512m"/>
			<jvmarg value="-Xmx512m"/>
			<jvmarg value="-XX:PermSize=512m"/>
			<jvmarg value="-XX:MaxPermSize=1024m"/>
			<arg line="start"/>
		</java>
	</target>

	<!--Stop Tomcat-->

	<target name="tomcat-stop" if="tomcat.running" depends="check-port" >
		<echo message="Tomcat is running...stopping it"/>
		<java jar="${@@TOMCAT_HOME_DIR@@}/bin/bootstrap.jar" fork="true" >
			<jvmarg value="-Dcatalina.home=${@@TOMCAT_HOME_DIR@@}"/>
			<arg line="stop"/>
		</java>
	</target>

	<!-- Check whether Tomcat is running -->

	<target name="check-port" description="Check whether Tomcat is running">
		<echo message="Checking whether Tomcat is running"/>
		<condition property="tomcat.running">
			<socket server="localhost" port="${@@DEPLOY_PORT@@}"/>
		</condition>
	</target>

	<target name="deploy" depends="package">
		<echo message="Checking status of Tomcat" />
		<antcall target="tomcat-stop" />
		<echo message="deploying admin-app, web-app and scheduler"/>
		<antcall target="deploy-admin" />
		<!--<antcall target="deploy-web" />
					<antcall target="deploy-scheduler" /> -->
		<antcall target="tomcat-start" />

	</target>


	<!--Deploy solr cloud-->

<target name="check_if_cloud_already_exists">
	<echo message="Solr cloud will not be deployed if cloud already exists."/>
	<mkdir dir="${@@SOLR_HOME@@}/solr-cloud/"/>
	<condition property="script_to_deploy">
		<resourcecount when="lt" count="1">
		    <fileset dir="${@@SOLR_HOME@@}/solr-cloud/" includes="*.sh"/>
		</resourcecount>
	</condition>
</target>

	<target name="deploy-solr-cloud" depends="check_if_cloud_already_exists" if="script_to_deploy" >
		<echo message="Deploying solr cloud"/>
		<copy todir="${@@SOLR_HOME@@}/solr-cloud" force="true" overwrite="true">
		    <fileset dir="src/main/resources/solr-cloud">
		    </fileset>
		</copy>
		<replace dir="${@@SOLR_HOME@@}" replacefilterfile="build_local.properties">
		    <include name="**/conf/"/>
		    <include name="**/solr/"/>
		    <include name="**/solr1/"/>
		    <include name="**/solr2/"/>
		    <include name="solr-cloud/*.sh"/>
		</replace>
		<replace dir="${@@SOLR_HOME@@}" replacefilterfile="build_default.properties">
		    <include name="**/conf/"/>
		    <include name="**/solr/"/>
		    <include name="**/solr1/"/>
		    <include name="**/solr2/"/>
		    <include name="solr-cloud/*.sh"/>
		</replace>
		<chmod file="${@@SOLR_HOME@@}/solr-cloud/*.sh" perm="755" type="both"/>
		<chmod file="${@@SOLR_HOME@@}/solr-cloud/solr-6.0.1/bin/*" perm="755" type="both"/>
		<chmod file="${@@SOLR_HOME@@}/solr-cloud/zookeeper-3.4.6/bin/*" perm="755" type="both"/>
		<exec executable="/bin/sh">
			<arg value="${@@SOLR_HOME@@}/solr-cloud/deployCore.sh" />
		</exec>

       </target>


	<target name="update-solr-cloud-core" >
		<echo message="Updating solr core"/>


		<copy todir="${@@SOLR_HOME@@}/solr-cloud/cores/${coreName}/conf/" force="true" overwrite="true">
		    <fileset file="src/main/resources/solr-cloud/cores/${coreName}/conf/data-config.xml">
		    </fileset>
		</copy>

		<copy todir="${@@SOLR_HOME@@}/solr-cloud/cores/${coreName}/conf/" force="true" overwrite="true">
		    <fileset file="src/main/resources/solr-cloud/cores/${coreName}/conf/schema.xml">
		    </fileset>
		</copy>
		
		<replace dir="${@@SOLR_HOME@@}" replacefilterfile="build_local.properties">
		    <include name="**/conf/"/>
		</replace>
		<replace dir="${@@SOLR_HOME@@}" replacefilterfile="build_default.properties">
		    <include name="**/conf/"/>
		</replace>
		<exec executable="/bin/sh">
			<arg value="${@@SOLR_HOME@@}/solr-cloud/updateCore.sh" />
			<arg value="${coreName}" />
		</exec>

       </target>

	<!--<target name="solr-index">
		<echo message="* * * * * /bin/curl http://192.168.12.166:8883/solr/supplierCore/dataimport?command=full-import&amp;commit=false " />
		<echo message="* * * * * /bin/curl http://192.168.12.166:8883/solr/productCore/dataimport?command=full-import&amp;commit=false " />
		<echo message="* * * * * /bin/curl http://192.168.12.166:8883/solr/locationCore/dataimport?command=full-import&amp;commit=false " />
		<echo message="* * * * * /bin/curl http://192.168.12.166:8883/solr/puvCore/dataimport?command=full-import&amp;commit=false " />
		<echo message="* * * * * /bin/curl http://192.168.12.166:8883/solr/keywordCore/dataimport?command=full-import&amp;commit=false " />
	</target>
-->
	<target name="svn-update-revision">
		<echo message="Updating to revision ${revision}" />
		<exec dir="." executable="svn" failonerror="true">
			<arg line="--username dhirenpatel --password justdial up -r ${revision}" />

		</exec>
	</target>

	<target name="deploy-comingSoon">
		<exec dir="./tools/ComingSoon" executable="${mvn}" failonerror="true">
			<arg line="clean package -Dmaven.test.skip=true"/>
		</exec>

		<echo message="deploying comingSoon in ${comingSoon}" />
		<copy todir="${comingSoon}">
			<fileset dir="./tools/ComingSoon/target/comingSoon"/>
		</copy>
	</target>
	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<target name="get-svn-revision" if="isUnix" unless="isSvnRevisionFetchedAlready">
				
		<exec executable="/usr/bin/svn" output="svn-revision.jsp" failonerror="false">
			<arg line="info"/>
		</exec>
		<exec executable="/bin/grep" input="svn-revision.jsp" output="svn-revision.jsp" failonerror="false">
			<arg line="'Last Changed Rev'" />
		</exec>

		<exec executable="/bin/sed" input="svn-revision.jsp" outputproperty="srev" failonerror="false">
			<arg line="'s/[a-zA-Z: ]*//'" />
		</exec>

		<echo message="Deploying SVN revision: ${srev}" />

		<copy file="svn-revision.jsp" todir="${web.dist.dir}/justdial-web/"  overwrite="true" />
		<copy file="svn-revision.jsp" todir="${admin.dist.dir}/justdial-admin-web/"  overwrite="true" />

		<taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
                <pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
        </classpath>
        </taskdef>
        <condition property="javadeploy" else="false">
                <isset property="include"/>
        </condition>
        <if>
                <equals arg1="${javadeploy}" arg2="false"/>
        <then>
                 <antcall target="replace-svn-revision-token" />
        </then>
        <else>
                 <echo>NOT CALLING replace-svn-revision-token Target </echo>
        </else>
        </if>
		<!-- <antcall target="replace-svn-revision-token" /> -->
                <property name="isSvnRevisionFetchedAlready" value="true" />
	</target>

	<target name="deploy-omni-home" >
	<record name="/home/mpweb/work/projects/omni_home.txt" action="start" append="false" />
		<echo message="Omni-Home Target Called" />
		<exec executable="/usr/bin/git" dir="${git.src.dir}/omni" outputproperty="OMNI_HOME_REV">
            <arg line="rev-parse HEAD" />
		</exec>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${git.src.dir}/omni/target">
                <include name="**/*"/>
                <exclude name="node_modules/**"/>
                <exclude name="package-lock.json"/>
            </fileset>
        </delete>


		<copy todir="${git.src.dir}/omni/target/" overwrite="true" >
            <fileset dir="${git.src.dir}/omni/">
            	<exclude name="target/**"/>
            </fileset>
		</copy>
		<replace file="${git.src.dir}/omni/target/package.json" replacefilterfile="build_local.properties">
			<replacefilter token="@@OMNI_HOME_ENV@@" value="${@@OMNI_HOME_ENV@@}" />
		</replace>
		<replace dir="${git.src.dir}/omni/target/src/config" replacefilterfile="build_local.properties">
            <replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}" />
            <replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}" />
            <replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}" />
            <replacefilter token="@@API_1@@" value="${@@API_1@@}" />
            <replacefilter token="@@API_2@@" value="${@@API_2@@}" />
            <replacefilter token="@@API_3@@" value="${@@API_3@@}" />
            <replacefilter token="@@OMNI_HOME_REV@@" value="${OMNI_HOME_REV}" />
		</replace>
		<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni/target/" failonerror="false">
			<arg line="install --production" />
		</exec>

		<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni/target/" failonerror="false">
            <arg line="run install-dependencies" />
		</exec>

		<parallel>
        	<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni/target/" failonerror="false">
    			<arg line="run dev-deployment" />
        	</exec>
        	<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni/target/" failonerror="false">
    			<arg line="run prod-deployment" />
        	</exec>
        	<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni/target/" failonerror="false">
    			<arg line="run server-deployment" />
        	</exec>
        </parallel> 
		<echo message="Omni-Home Target completed" />
	<record name="/home/mpweb/work/projects/omni_home.txt" action="stop" />
    </target>

    <target name="deploy-omni-home-copy" >
            <copy todir="${@@STATIC_HOME@@}/static/omni/dist" overwrite="true" >
            <fileset dir="${git.src.dir}/omni/target/dist"> </fileset>
            </copy>
 	</target>

	<target name="replace-svn-revision-token" description="Target which replaces svn-revision token[@@srev@@] from all static files including .htm,.js and .css to make them support new version, so that browser should download new &amp; discard old cached version.">
		<copy todir="${admin.dist.dir}/justdial-admin-web/" overwrite="true" >
			<fileset dir="${static.src.dir}/">
<!--			<different targetdir="${admin.dist.dir}/justdial-admin-web/" ignoreFileTimes="true"/>   -->
			<include name="supplierLogin.htm"/>
			<include name="JustDialHome/**"/>
			<include name="scripts/**"/>
			<include name="static/**"/>
			<include name="WEB-INF/**"/>
			<include name="nodeJs/**"/>
<!--			<exclude name="META-INF/**"/>
			<exclude name="WEB-INF/**"/>
			<exclude name="errorpages/**"/>
			<exclude name="includes/**"/>     -->
			</fileset>
		</copy>   
<!--		<exec executable="/usr/bin/rsync">
		  <arg value="-rz" />
		  <arg value="${static.src.dir}/" />
		  <arg value="${admin.dist.dir}/justdial-admin-web/" />
		</exec>  --> 
		<property name="time" value=""/>
		<replace dir="${admin.dist.dir}/justdial-admin-web/">
			<include name="*.htm"/>
			<include name="JustDialHome/**"/>
  			<include name="scripts/**"/>
			<include name="static/**"/>
			<include name="WEB-INF/pages/**"/>
			<replacefilter token="@@srev@@" value="${srev}${time}"/>
			<replacefilter token="@@API_REV@@" value="${srev}-${current_apitime}${APICACHED}"/>
		</replace>

		<replace dir="${admin.dist.dir}/justdial-admin-web/">
			<include name="static/php/**/*.php"/>
			<include name="static/php/**/*.ini"/>
			<include name="static/styles/website/css/jquery-ui.css"/>
			<include name="static/styles/website/css/grocery/grocery.css"/>
			<include name="static/styles/website/css/grocery/footer.css"/>
			<include name="static/styles/website/css/imageplugin/jquery.ad-gallery.css"/>
			<include name="static/scripts/website/common.js"/>
			<include name="static/JdOmniHome/mobile/config/Services.js"/>
			<include name="static/gulp_tasks/webstore_gulpfile.js"/>
			<replacefilter token="@@MYSQL.HOST@@" value="${@@MYSQL.HOST@@}"/>
			<replacefilter token="@@MYSQL.USER@@" value="${@@MYSQL.USER@@}"/>
			<replacefilter token="@@MYSQL.USER.PHP@@" value="${@@MYSQL.USER.PHP@@}"/>
			<replacefilter token="@@MYSQL.PASSWORD@@" value="${@@MYSQL.PASSWORD@@}"/>
			<replacefilter token="@@MYSQL.PASSWORD.PHP@@" value="${@@MYSQL.PASSWORD.PHP@@}"/>
			<replacefilter token="@@MYSQL.SCHEMA@@" value="${@@MYSQL.SCHEMA@@}"/>
			<replacefilter token="@@MONGO.HOST.IP@@" value="${@@MONGO.HOST.IP@@}"/>
			<replacefilter token="@@MONGO.HOST.PORT@@" value="${@@MONGO.HOST.PORT@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.HOST@@" value="${@@SMS.EMAIL.SERVER.HOST@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.USER@@" value="${@@SMS.EMAIL.SERVER.USER@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.PASSWORD@@" value="${@@SMS.EMAIL.SERVER.PASSWORD@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.SCHEMA@@" value="${@@SMS.EMAIL.SERVER.SCHEMA@@}"/>
			<replacefilter token="@@MONGO.PHP.CONNECTION.URL@@" value="${@@MONGO.PHP.CONNECTION.URL@@}"/>
			<replacefilter token="@@SERVER_URL@@" value="${@@SERVER_URL@@}"/>
			<replacefilter token="@@LIVE_URL@@" value="${@@LIVE_URL@@}"/>
			<replacefilter token="@@SHOP_URL@@" value="${@@SHOP_URL@@}"/>
			<replacefilter token="@@PREVIEW_URL@@" value="${@@PREVIEW_URL@@}"/>
			<replacefilter token="@@SHOP_JD_URL@@" value="${@@SHOP_JD_URL@@}"/>
			<replacefilter token="@@CMS_SHOP_URL@@" value="${@@CMS_SHOP_URL@@}"/>
			<replacefilter token="@@CMSSITE_SHOP_URL@@" value="${@@CMSSITE_SHOP_URL@@}"/>
			<replacefilter token="@@DEMO_SHOP_SUPID@@" value="${@@DEMO_SHOP_SUPID@@}"/>
			<replacefilter token="@@SOLR_BASE_URL@@" value="${@@SOLR_BASE_URL@@}"/>
			<replacefilter token="@@SOLR_BASE_URL_AUTOSUGGEST@@" value="${@@SOLR_BASE_URL_AUTOSUGGEST@@}"/>
			<replacefilter token="@@SOLR_BASE_URL_JUSTDIAL@@" value="${@@SOLR_BASE_URL_JUSTDIAL@@}"/>
			<replacefilter token="@@SOLR_BASE_URL_ALLCORE@@" value="${@@SOLR_BASE_URL_ALLCORE@@}"/>
			<replacefilter token="@@BILL_PAYMENT_URL@@" value="${@@BILL_PAYMENT_URL@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
			<replacefilter token="@@AMAZON_ACCESS_KEY_ID@@" value="${@@AMAZON_ACCESS_KEY_ID@@}"/>
			<replacefilter token="@@AMAZON_SECRET_ACCESS_KEY@@" value="${@@AMAZON_SECRET_ACCESS_KEY@@}"/>
			<replacefilter token="@@ECS.SDK.LOCATION@@" value="${@@ECS.SDK.LOCATION@@}"/>
			<replacefilter token="@@SAN.BASE.DIR@@" value="${@@SAN.BASE.DIR@@}"/>
			<replacefilter token="@@SAN.BASE.DIR.NEW@@" value="${@@SAN.BASE.DIR.NEW@@}"/>
			<replacefilter token="@@PHP_SAN_PATH@@" value="${@@PHP_SAN_PATH@@}"/>
			<replacefilter token="@@MYSQL_ALLOWED_OPERATIONS@@" value="${@@MYSQL_ALLOWED_OPERATIONS@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
			<replacefilter token="@@STATIC_HOME@@" value="${@@STATIC_HOME@@}"/>
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		    <replacefilter token="@@MYSQL.HOST.SLAVE@@" value="${@@MYSQL.HOST.SLAVE@@}"/>
		    <replacefilter token="@@MYSQL.SLAVE.HOSTS@@" value="${@@MYSQL.SLAVE.HOSTS@@}"/>
		    <replacefilter token="@@MYSQL.SLAVE_58.HOST@@" value="${@@MYSQL.SLAVE_58.HOST@@}"/>
		    <replacefilter token="@@MYSQL.SOLR_SLAVE_57.HOST@@" value="${@@MYSQL.SOLR_SLAVE_57.HOST@@}"/>
		    <replacefilter token="@@SERVICE_CONTRACT_URL@@" value="${@@SERVICE_CONTRACT_URL@@}"/>
		    <replacefilter token="@@REDIS.HOST.IP@@" value="${@@REDIS.HOST.IP@@}"/>
		    <replacefilter token="@@REDIS.HOST.PORT@@" value="${@@REDIS.HOST.PORT@@}"/>
		    <replacefilter token="@@REDIS.PASSWORD@@" value="${@@REDIS.PASSWORD@@}"/>
		    <replacefilter token="@@REDIS_PREFIX_KEY@@" value="${@@REDIS_PREFIX_KEY@@}" />
		    <replacefilter token="@@REDIS_JD.HOST.IP@@" value="${@@REDIS_JD.HOST.IP@@}"/>
		    <replacefilter token="@@REDIS_JD.HOST.PORT@@" value="${@@REDIS_JD.HOST.PORT@@}"/>
		    <replacefilter token="@@REDIS_JD.PASSWORD@@" value="${@@REDIS_JD.PASSWORD@@}"/>
		    <replacefilter token="@@REDIS_JD_PREFIX_KEY@@" value="${@@REDIS_JD_PREFIX_KEY@@}" />
			<replacefilter token="@@JD_BUILDER_URL@@" value="${@@JD_BUILDER_URL@@}"/>
			<replacefilter token="@@REPORTS_URL@@" value="${@@REPORTS_URL@@}"/>
			<replacefilter token="@@LME_CLIENT_ID@@" value="${@@LME_CLIENT_ID@@}"/>
			<replacefilter token="@@LME_CLIENT_SECRET@@" value="${@@LME_CLIENT_SECRET@@}"/>
			<replacefilter token="@@LME_API_URL@@" value="${@@LME_API_URL@@}"/>
			<replacefilter token="@@LME_REDIRECT_URL@@" value="${@@LME_REDIRECT_URL@@}"/>
			<replacefilter token="@@HTTPS_SERVER_URL@@" value="${@@HTTPS_SERVER_URL@@}"/>
			<replacefilter token="@@MYSQL.MULTI.HOSTS@@" value="${@@MYSQL.MULTI.HOSTS@@}"/>
			<replacefilter token="@@MYSQL.CRON.READ.HOST@@" value="${@@MYSQL.CRON.READ.HOST@@}"/>
			<replacefilter token="@@MYSQL.CRON.WRITE.HOST@@" value="${@@MYSQL.CRON.WRITE.HOST@@}"/>
			<replacefilter token="@@MYSQL.CRON.USER@@" value="${@@MYSQL.CRON.USER@@}"/>
			<replacefilter token="@@MYSQL.CRON.PASSWORD.PHP@@" value="${@@MYSQL.CRON.PASSWORD.PHP@@}"/>
			<replacefilter token="@@MYSQL.MULTI_SLAVE.HOSTS@@" value="${@@MYSQL.MULTI_SLAVE.HOSTS@@}"/>
			<replacefilter token="@@TRANSLITERATION.SERVER.HOST@@" value="${@@TRANSLITERATION.SERVER.HOST@@}"/>
			<replacefilter token="@@TRANSLITERATION.SERVER.SCHEMA@@" value="${@@TRANSLITERATION.SERVER.SCHEMA@@}"/>
			<replacefilter token="@@STATICIMG_DOMAIN@@" value="${@@STATICIMG_DOMAIN@@}"/>
			<replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}"/>
			<replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}"/>
			<replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}"/>
			<replacefilter token="@@staticIp4@@" value="${@@STATIC_IP4@@}"/>
			<replacefilter token="@@staticIp5@@" value="${@@STATIC_IP5@@}"/>
			<replacefilter token="@@PINCODE.LATLONG.SERVER@@" value="${@@PINCODE.LATLONG.SERVER@@}"/>	
			<replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
			<replacefilter token="@@DOCTOR_URL@@" value="${@@DOCTOR_URL@@}"/>
			<replacefilter token="@@DIALER_SCHEMA@@" value="${@@DIALER_SCHEMA@@}"/>
			<replacefilter token="@@DIALER_USERNAME@@" value="${@@DIALER_USERNAME@@}"/>
			<replacefilter token="@@DIALER_PASSWORD@@" value="${@@DIALER_PASSWORD@@}"/>
            <replacefilter token="@@OFFERS_URL@@" value="${@@OFFERS_URL@@}"/>
		    <replacefilter token="@@API_1@@" value="${@@API_1@@}"/>
            <replacefilter token="@@API_2@@" value="${@@API_2@@}"/>
            <replacefilter token="@@API_3@@" value="${@@API_3@@}"/>
            <replacefilter token="@@MKTAPI_URL@@" value="${@@MKTAPI_URL@@}"/>
            <replacefilter token="@@ENV@@" value="${@@ENV@@}"/>
            <replacefilter token="@@SECUREPG@@" value="${@@SECUREPG@@}"/>
            <replacefilter token="@@SECUREPG_INFOURL@@" value="${@@SECUREPG_INFOURL@@}"/>
            <replacefilter token="@@BASE_URL@@" value="${@@BASE_URL@@}"/>
			<replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>

			<replacefilter token="@@ORDER_MESSAGE_HOST@@" value="${@@ORDER_MESSAGE_HOST@@}"/>
			<replacefilter token="@@ORDER_MESSAGE_USER@@" value="${@@ORDER_MESSAGE_USER@@}"/>
			<replacefilter token="@@ORDER_MESSAGE_PASSWORD@@" value="${@@ORDER_MESSAGE_PASSWORD@@}"/>
			<replacefilter token="@@KYC_INVOICE_IMAGE_DOMAIN@@" value="${@@KYC_INVOICE_IMAGE_DOMAIN@@}"/>
			<replacefilter token="@@KYC_HOST@@" value="${@@KYC_HOST@@}"/>
			<replacefilter token="@@APIDOMAIN@@" value="${@@APIDOMAIN@@}"/>
			<replacefilter token="@@CATEGORY_APIDOMAIN@@" value="${@@CATEGORY_APIDOMAIN@@}"/>
			<replacefilter token="@@PAYMENT_ENV@@" value="${@@PAYMENT_ENV@@}"/>
			<replacefilter token="@@TRAC_SERVER@@" value="${@@TRAC_SERVER@@}"/>
			<replacefilter token="@@TRAC_USER@@" value="${@@TRAC_USER@@}"/>
			<replacefilter token="@@TRAC_PSWD@@" value="${@@TRAC_PSWD@@}"/>
			<replacefilter token="@@VERTICAL_APIS@@" value="${@@VERTICAL_APIS@@}"/>
			<replacefilter token="@@GST_PERCENT@@" value="${@@GST_PERCENT@@}"/>
			<replacefilter token="@@GIT_SRC_DIR@@" value="${@@GIT.SRC.DIR@@}"/>
			<replacefilter token="@@B2B_URL@@" value="${@@B2B_URL@@}"/>
			<replacefilter token="@@B2B_EMAIL_URL@@" value="${@@B2B_EMAIL_URL@@}"/>
			<replacefilter token="@@REDIRECT_URL@@" value="${@@REDIRECT_URL@@}"/>
			<replacefilter token="@@PRESCRIPTION_VERTICAL_LIST@@" value="${@@PRESCRIPTION_VERTICAL_LIST@@}"/>
			<replacefilter token="@@DATAJANUSLB_URL@@" value="${@@DATAJANUSLB_URL@@}"/>
		</replace>
		
		<echo message="Replacing tokens for cookieless static domains..."/>
		<replace dir="${admin.dist.dir}/justdial-admin-web/static/scripts/libs/">
			<include name="**/*.*"/>
			<replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}"/>
			<replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}"/>
			<replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}"/>
			<replacefilter token="@@staticIp4@@" value="${@@STATIC_IP4@@}"/>
			<replacefilter token="@@staticIp5@@" value="${@@STATIC_IP5@@}"/>
		</replace>
		
		<echo message="Replacing tokens for mobile app..."/>
		<replace file="${admin.dist.dir}/justdial-admin-web/static/config/mobileVendorApp.json">
			<replacefilter token="@@domain-url@@" value="${@@HTTP_PROTOCOL@@}://static1.${@@PROJECT_URL@@}"/>
			<replacefilter token="@@domain-service-url@@" value="${@@SERVICE_URL@@}"/>
		</replace>
		<replace file="${admin.dist.dir}/justdial-admin-web/static/mobile/grocery-app/www/js/loaderjs.js">
			<replacefilter token="@@domain-url@@" value="${@@HTTP_PROTOCOL@@}://static1.${@@PROJECT_URL@@}"/>
		</replace>
		<replace file="${admin.dist.dir}/justdial-admin-web/static/mobile/grocery-app/www/mobile.html">
			<replacefilter token="@@domain-url@@" value="${@@HTTP_PROTOCOL@@}://static1.${@@PROJECT_URL@@}"/>
		</replace>
		<replace file="${admin.dist.dir}/justdial-admin-web/JustDialHome/js/angularHome.js">
			<replacefilter token="@@SHOP_URL@@" value="${@@SHOP_URL@@}"/>
			<replacefilter token="@@SHOP_JD_URL@@" value="${@@SHOP_JD_URL@@}"/>
			<replacefilter token="@@CMS_SHOP_URL@@" value="${@@CMS_SHOP_URL@@}"/>
		</replace>
		<replace file="${admin.dist.dir}/justdial-admin-web/static/php/new_website/tools/js/grocery_new.js">
			<replacefilter token="@@LIVE_URL@@" value="${@@LIVE_URL@@}"/>
		</replace>
		<replace file="${admin.dist.dir}/justdial-admin-web/static/scripts/common/utills.js">
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@STORE_LOGO_IMAGE_BASE_PATH@@" value="${@@STORE_LOGO_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@GROUPS_IMAGE_BASE_PATH@@" value="${@@GROUPS_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		    <replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
		</replace>
		<replace file="${admin.dist.dir}/justdial-admin-web/scripts/um/searchUserAccount.js">
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		</replace>

		<replace file="${admin.dist.dir}/justdial-admin-web/static/mobile/grocery-app/www/js/utills.js">
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		    <replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
		</replace>
		<replace file="${admin.dist.dir}/justdial-admin-web/static/php/new_website/tools/js/grocery_new.js">
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
		    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		    <replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>

		</replace>

                <replace file="${admin.dist.dir}/justdial-admin-web/static/scripts/initialize.js">
                        <replacefilter token="@@production@@" value="true"/>
                        <replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
                        <replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}"/>
                        <replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}"/>
                        <replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@HTTPSFLAG@@" value="${@@HTTPSFLAG@@}"/>
			<replacefilter token="@@SERVICE_URL@@" value="${@@SERVICE_URL@@}"/>
                </replace>


    <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
    <pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
    </classpath>
    </taskdef>
    <condition property="warbuild" else="false">
    <isset property="include"/>
    </condition>
    <if>
    <equals arg1="${warbuild}" arg2="false"/>
    <then>
    <parallel>
   <!-- <antcall target="nodejs-minify" />
    <antcall target="deploy-omni-home" />
    <antcall target="omni-webstore" />
    <antcall target="omni-service" />
    <antcall target="omni-automation-tools" />
    <antcall target="deploy-justdial-misc" />
    <antcall target="jd-emails" />
    <antcall target="jd-vendor" />
    <antcall target="backend-internal" />-->
    </parallel>
    <!-- <antcall target="nodeServerbuild" /> -->
    </then>
    <else>
    <echo message="-------------------MINIFICATION ARE NOT REQ FOR WAR BUILD------------------" />
    </else>
    </if>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
        <pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
        </classpath>
       </taskdef>
       <condition property="osheen" else="false">
       <isset property="include"/>
       </condition>
       <if>
       <equals arg1="${osheen}" arg2="false"/>
       <then>
    <!--   <copy todir="${@@STATIC_HOME@@}" overwrite="true" >
       <fileset dir="${admin.dist.dir}/justdial-admin-web/" includes="**">
       <exclude name="**/*.htm"/>
       <exclude name="nodeJs/**"/>
       </fileset>
       </copy>
       <copy todir="${@@STATIC_HOME@@}" overwrite="false" >
       <fileset dir="${admin.dist.dir}/justdial-admin-web/" includes="**/*.htm">
       </fileset>
      </copy>
      <copy todir="${@@STATIC_HOME@@}/static/omni/dist" overwrite="true" >
      <fileset dir="${git.src.dir}/omni/target/dist"> </fileset>
      </copy>
      <copy todir="${@@STATIC_HOME@@}/static/webstore/dist" overwrite="true" >
                <fileset dir="${git.src.dir}/webstore/target/dist"> </fileset>
      </copy>
      <copy todir="${@@STATIC_HOME@@}/static/omni-automation-tools/dist" overwrite="true" >
                <fileset dir="${git.src.dir}/omni-automation-tools/target/dist"> </fileset>
      </copy>

      <copy todir="${@@STATIC_HOME@@}/static/justdial-misc/dist" overwrite="true" >
      <fileset dir="${git.src.dir}/justdial-misc/target/dist"> </fileset>
      </copy>

      <copy todir="${@@STATIC_HOME@@}/static/jd-vendor/dist" overwrite="true" >
      <fileset dir="${git.src.dir}/jd-vendor/target/dist"> </fileset>
      </copy> -->

      </then>
      <else>
     <echo message="----------------------NOT COPYING TO /var/www/----------------------------"/>
    <!-- <copy todir="${@@STATIC_HOME2@@}" overwrite="true" >
     <fileset dir="${admin.dist.dir}/justdial-admin-web/" includes="**">
     <exclude name="**/*.htm"/>
     <exclude name="nodeJs/**"/>
     </fileset>
     </copy>
     <copy todir="${@@STATIC_HOME2@@}" overwrite="false" >
     <fileset dir="${admin.dist.dir}/justdial-admin-web/" includes="**/*.htm">
     </fileset>
                                                                                                                                                                                                              </copy>
     <copy todir="${@@STATIC_HOME2@@}/static/omni/dist" overwrite="true" >
  		<fileset dir="${git.src.dir}/omni/target/dist"> </fileset>
     </copy>                                                                                                                                                                                                        
     <copy todir="${@@STATIC_HOME2@@}/static/webstore/dist" overwrite="true" >
                <fileset dir="${git.src.dir}/webstore/target/dist"> </fileset>
     </copy>
     <copy todir="${@@STATIC_HOME2@@}/static/omni-automation-tools/dist" overwrite="true" >
                <fileset dir="${git.src.dir}/omni-automation-tools/target/dist"> </fileset>
     </copy>

      <copy todir="${@@STATIC_HOME2@@}/static/justdial-misc/dist" overwrite="true" >
      <fileset dir="${git.src.dir}/justdial-misc/target/dist"> </fileset>
      </copy>
      <copy todir="${@@STATIC_HOME2@@}/static/jd-vendor/dist" overwrite="true" >
      <fileset dir="${git.src.dir}/jd-vendor/target/dist"> </fileset>
      </copy> -->

      </else>
      </if>



                 

 <taskdef resource="net/sf/antcontrib/antlib.xml">
     <classpath>
     <pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
     </classpath>
     </taskdef>
     <condition property="warbuild" else="false">
     <isset property="include"/>
     </condition>
     <if>
     <equals arg1="${warbuild}" arg2="false"/>
     <then>

		<antcall target="transliteration" />
    </then>
    <else>
        <echo message="-------------------TRANSLITERATION ARE NOT REQ FOR WAR BUILD------------------" />
    </else>
    </if>

	<!--	<antcall target="nodeServerstart" /> -->
		
				
	</target>

	<target name="createDB-comingSoon" description="creates tables for comingSoon">
		<echo message="start: dumping the current database for comingSoon"/>
		<exec dir="."
						  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysqldump" output="dump.sql" failonerror="true">
			<arg line="--skip-triggers -u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} ${@@MYSQL.COMINGSOON.SCHEMA@@}"/>
		</exec>
		<echo message="end: dumping the current database for comingSoon"/>

		<echo message="start: creating DB for comingSoon"/>

		<exec dir="."
				  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.COMINGSOON.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute='source ./tools/SQLScripts/ComingSoonNotificationTable.sql'"/>
		</exec>
		<echo message="end: creating DB for comingSoon"/>
	</target>

	<!--<target name="deploy-with-test" depends="clean, package, deploy-admin,deploy-web">
					<echo message="deploying admin-app and web-app"/>
			</target>-->

	<target name="deploy-admin" depends="copy-reloadable-config">
		<echo message=" Skip Junit Test case :==> ${skipTest}" />
		<echo message="deploying admin-app in /home/[user]/www/admin. This will unjar the war file in /home/[user]/www/admin" />
		<delete dir="${@@ADMIN_DEPLOY_DIR@@}"/>
		<!--<unzip src="${admin.dist.dir}/justdial-admin-web.war" dest="${@@ADMIN_DEPLOY_DIR@@}" />-->
		<copy todir="${@@ADMIN_DEPLOY_DIR@@}" force="true" overwrite="true">
			 <fileset dir="${admin.dist.dir}/justdial-admin-web/"/>
		</copy>
	</target>


	<!--<target name="deploy-web">
					<echo message=" Skip Junit Test case is :==> ${skipTest}" />
					<echo message="deploying admin-app in /home/[user]/www/web. This will unjar the war file in /home/[user]/www/web" />
								
					<copy todir="${@@WEB_DEPLOY_DIR@@}">
						<fileset dir="${web.dist.dir}/justdial-web"/>
					</copy>
			</target>-->

	<target name="deploy-scheduler">
		<echo message=" Skip Junit Test case :==> ${skipTest}" />
		<echo message="deploying scheduler" />
		<!-- <copy file="${scheduler.dist.dir}/justdial-scheduler.war" tofile="${@@SCHEDULER_DEPLOY_DIR@@}.war" overwrite="true" /> -->
		<unzip src="${scheduler.dist.dir}/justdial-scheduler.war" dest="${@@SCHEDULER_DEPLOY_DIR@@}" />
	</target>

	<target name="deploy-solr-in-www">
		<echo message="deploying admin-app in /home/[user]/www/solr_home/webapp. This will unjar the war file in /home/[user]/www/solr_home/webapp" />
		<unzip src="${solr.dist.dir}/solr.war" dest="${@@SOLR_DEPLOY_DIR@@}"/>
	</target>

	<target name="clean" description="call mvn clean">
	
	    <!--	<exec dir="."
				executable="${mvn}" failonerror="true">
			<arg line="clean justdial-admin-web justdial-config"/>
		</exec> 
	     -->

		 <delete dir="justdial-admin-web/target" failonerror="false"/>
		 <delete dir="justdial-config/target" failonerror="false"/>

	</target>

	<!--<target name="package"  description="Call mvn package">
					<exec dir="."
							executable="${mvn}" failonerror="true">
					<arg line="package"/>
					</exec>
			</target>-->
	<target name="replace-config" depends="svn-revert">
		<replace dir="${config.src.dir}" replacefilterfile="build_local.properties" />
		<replace dir="${config.src.dir}" replacefilterfile="build_default.properties" />
		<replace dir="${admin.src.dir}" replacefilterfile="build_local.properties" />
		<copy file="${config.src.dir}/log4j.xml" todir="${admin.src.dir}" />
		<echo message="Replacing tokens for auto import script for product core..."/>
		<replace file="tools/SolrScripts/unix/solrProductCoreAutoImport.sh" replacefilterfile="build_local.properties" />
		<replace file="tools/SolrScripts/unix/solrProductCoreAutoImport.sh" replacefilterfile="build_default.properties" />
		<copy file="${config.src.dir}/log4j.xml" todir="${admin.src.dir}" />
		
	</target>
	
	<target name="package" description="Call mvn package with test. If you want to skip test add -Dmaven.test.skip=true" depends=" revertAll, clean">
          	<antcall target="get-svn-revision"></antcall>
        <parallel>
		 		  <sequential>
         	<antcall target="replace-config"></antcall>
          	<antcall target="replaceVersion"></antcall>
          	<replace file="pom.xml" replacefilterfile="build_local.properties"/>
 		<replace file="pom.xml" replacefilterfile="build_default.properties"/>

 		<taskdef resource="net/sf/antcontrib/antlib.xml">
  			<classpath>
    		<pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
  		</classpath>
		</taskdef>
	
	   <condition property="include.set" else="false">
	      <isset property="include"/>
	    </condition>


		  <if>
			<equals arg1="${include.set}" arg2="false"/>
			 <then>
			    <echo message="The value of property foo is bar" />
					<property name="options" value=""/>	  
					<property name="extraOptions" value=""/>	 
				   <echo message="-------------------1---------------------" />
 				 </then>
				  <else>
				  	<echo message="-------------------2-------------------" />
				   	<property name="options" value="-pl ${include}"/>	  
					<property name="extraOptions" value="-am"/>	  
				 </else>
				</if>

		<condition property="profile.set" else="false">
	      <isset property="profile"/>
	    </condition>

			<if>
			 <equals arg1="${profile.set}" arg2="false"/>
				 <then>
				   <echo message="-------------------3---------------------" />
				 	<exec dir="." executable="${mvn}" failonerror="true">
					<arg line="-T 4C package -P online -Dmaven.test.skip=${skipTest}"/>
					</exec> 
				 </then>
			 <else>
			   <echo message="-------------------4---------------------${profile}" />
			 <if>
			 <equals arg1="${profile}" arg2="deploy-online"/>
			 	

				 <then>
				 	<exec dir="." executable="${mvn}" failonerror="true">
					<arg line="package -P online -Dmaven.test.skip=${skipTest}"/>
					</exec> 

					<exec dir="." executable="${mvn}" failonerror="true">
						<arg line="deploy -P deploy-online ${options} -Dmaven.test.skip=${skipTest}"/>
				   </exec> 			   
				 </then>
	    	 <else>
					<if>
					 <equals arg1="${profile}" arg2="build-online"/>

					 <then>
					 	  <exec dir="." executable="${mvn}" failonerror="true">
							<arg line="clean package deploy -f justdial-config/pom.xml -Dmaven.test.skip=${skipTest}"/>
					      </exec> 
					 	<exec dir="." executable="${mvn}" failonerror="true">
							<arg line="package -P build-online -Dmaven.test.skip=${skipTest}"/>
						</exec> 
					 </then>
					 </if>
		    	</else>
			 </if>		
			</else>
			</if>

 		  </sequential>
		</parallel>


		
	</target>

	

	<!-- To revert any changes made to files in resources folder -->
	<target name="svn-revert">
		<echo message="Performing svn revert on ${admin.src.dir} and ${config.src.dir}." />
		<exec dir="${config.src.dir}" executable="svn" failonerror="true">
			<arg line="revert -R ." />
		</exec>
		<exec dir="${admin.src.dir}" executable="svn" failonerror="true">
			<arg line="revert -R ." />
		</exec>
		<exec dir="tools/SolrScripts/unix/" executable="svn" failonerror="true">
			<arg line="revert -R ." />
		</exec>
	</target>

	<!-- To copy the files from classes folder to the resources folder -->
	<target name="eclipse-config">
		<echo message="eclipse-config is discontinued. Use replace-config instead. svn-revert would be performed internally by replace-config." />
		<!--<exec dir="justdial-config" executable="mvn" failonerror="true">
    						<arg line="package" />
    				</exec>
    				<delete>
    					<fileset dir="justdial-config/src/main/resources">
    							<include name="**/*.vm"/>
    					    	<include name="**/*.properties"/>
    					    	<include name="**/*.xml"/>
    					</fileset>
    					<fileset dir="justdial-admin-web/src/main/resources">    					 		
    					    	<include name="**/*.properties"/>    					    	
    					 </fileset>
    				</delete>	
    				<copy toDir="justdial-admin-web/src/main/resources" >
		    			<fileset dir="justdial-admin-web/target/classes">
    			    			<include name="**/*.properties"/>
    		    		</fileset>
    				</copy>
    	    			<copy toDir="justdial-config/src/main/resources" >    			     	    				
    						<fileset dir="justdial-config/target/classes">
    			 				<include name="**/*.vm"/>
    						    <include name="**/*.properties"/>
    						    <include name="**/*.xml"/>
    						</fileset>
    		
    				</copy> -->
	</target>


	<target name="customize-wordpress" description="Will customize wordpress and make it live" >
		<exec dir="./src/main/resources/cms" executable="${mvn}" failonerror="true">
			<arg line="clean package -Dmaven.test.skip=true"/>
		</exec>

		<echo message="deploying wordpress ....." />
		<echo message="Please wait..... , Unzipping wordpress 3.1.4 for you in ${@@CMS_HOME_DIR@@} directory." />
		<unzip src="./tools/softwares/wordpress-3.1.4.zip"  dest="${@@CMS_HOME_DIR@@}" >
			<mapper>
				<globmapper from="wordpress/*" to="*"/>
			</mapper>
		</unzip>

		<copy todir="${@@CMS_HOME_DIR@@}"  overwrite="true" includeEmptyDirs="true" >
			<fileset dir="./src/main/resources/cms/target/classes"/>
		</copy>
	</target>

	<target name="setBuildParameters" description="Modifies the propeties files to add correct database access parameters">
		<copy file="./src/main/resources/cms/SQL/cmsDump.sql" tofile="./src/main/resources/cms/SQL/cmsDump_bkup.sql" overwrite="true" />
		<replace file="./src/main/resources/cms/SQL/cmsDump_bkup.sql">
			<include name="**/*.*"/>
			<replacefilter token="@@related_products_showall_url@@" value="${@@related_products_showall_url@@}"/>
			<replacefilter token="@@get_portal_header_url@@" value="${@@get_portal_header_url@@}"/>
			<replacefilter token="@@siteurl@@" value="${@@siteurl@@}"/>
			<replacefilter token="@@related_products_url@@" value="${@@related_products_url@@}"/>
			<replacefilter token="@@s4w_solr_path@@" value="${@@s4w_solr_path@@}"/>
			<replacefilter token="@@s4w_solr_host@@" value="${@@s4w_solr_host@@}"/>
			<replacefilter token="@@s4w_solr_port@@" value="${@@s4w_solr_port@@}"/>
			<replacefilter token="@@thumbnail_size_w@@" value="${@@thumbnail_size_w@@}"/>
			<replacefilter token="@@thumbnail_size_h@@" value="${@@thumbnail_size_h@@}"/>
			<replacefilter token="@@post_thumbnail_main_size_w@@" value="${@@post_thumbnail_main_size_w@@}"/>
			<replacefilter token="@@post_thumbnail_main_size_h@@" value="${@@post_thumbnail_main_size_h@@}"/>
			<replacefilter token="@@post_thumbnail_listing_size_w@@" value="${@@post_thumbnail_listing_size_w@@}"/>
			<replacefilter token="@@post_thumbnail_listing_size_h@@" value="${@@post_thumbnail_listing_size_h@@}"/>
			<replacefilter token="@@post_thumbnail_small_size_w@@" value="${@@post_thumbnail_small_size_w@@}"/>
			<replacefilter token="@@post_thumbnail_small_size_h@@" value="${@@post_thumbnail_small_size_h@@}"/>
			<replacefilter token="@@post_thumbnail_popular_size_w@@" value="${@@post_thumbnail_popular_size_w@@}"/>
			<replacefilter token="@@post_thumbnail_popular_size_h@@" value="${@@post_thumbnail_popular_size_h@@}"/>
			<replacefilter token="@@medium_size_w@@" value="${@@medium_size_w@@}"/>
			<replacefilter token="@@medium_size_h@@" value="${@@medium_size_h@@}"/>
			<replacefilter token="@@large_size_w@@" value="${@@large_size_w@@}"/>
			<replacefilter token="@@large_size_h@@" value="${@@large_size_h@@}"/>
		</replace>
	</target>

	<target name="wp-db"  depends="setBuildParameters" description="Will manage databae activity for wordpress" >
		<echo message="start: dumping the current database for wordpress"/>
		<exec dir="."
						  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysqldump" output="cms_dump${current.time}.sql" failonerror="true">
			<arg line=" -u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} ${@@MYSQL.CMS.SCHEMA@@}"/>
		</exec>
		<echo message="end: dumping the current database for cms"/>

		<echo message="start: creating DB for cms"/>

		<exec dir="."
				  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.CMS.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute='source ./src/main/resources/cms/SQL/run.sql'"/>
		</exec>
		<echo message="end: creating DB for comingSoon"/>
	</target>

	<property name="h" value="${@@MYSQL.HOST@@}" />
	<property name="u" value="${@@MYSQL.USER@@}" />
	<property name="p" value="${@@MYSQL.PASSWORD@@}" />
	<property name="db" value="${@@MYSQL.SCHEMA@@}" />
	<property name="P" value="${@@MYSQL.PORT@@}" />

	<target name="mysqlProp" description="Useful to set solr indexing from replication , if required.">
		<copy file="./mysql_replication.properties" tofile="./mysql.properties" overwrite="true" />
		<replace file="./mysql.properties">
			<replacefilter token="@@h@@" value="${h}"/>
			<replacefilter token="@@u@@" value="${u}"/>
			<replacefilter token="@@p@@" value="${p}"/>
			<replacefilter token="@@P@@" value="${P}"/>
			<replacefilter token="@@db@@" value="${db}"/>
		</replace>
	</target>

	<target name="config-solr" description="It will make solr war file" depends="mysqlProp">
		<exec dir="./src/main/resources/solr" executable="${mvn}" failonerror="true">
			<arg line="clean package -Dmaven.test.skip=true"/>
		</exec>

		<!--		
				<echo message="Configuring solr for you ....." />
				<copy todir="${@@SOLR_DEPLOY_DIR@@}"  overwrite="true" >
					<fileset dir="./src/main/resources/solr/target/solr" excludes="WEB-INF/classes/**" />
				</copy>
				
				<echo message="Adding cores in solr ....." />
				<copy todir="${@@SOLR_DEPLOY_DIR@@}"  overwrite="true" >
					<fileset dir="./src/main/resources/solr/target/classes" excludes="pom.xml" />
				</copy>
				
				<echo message="Patching Solr with RA ....." />
				<copy todir="${@@SOLR_DEPLOY_DIR@@}/WEB-INF/lib"  overwrite="true" >
						<fileset dir="./src/main/resources/solr-ralib/" />
				</copy>
				
				<delete file="${@@SOLR_DEPLOY_DIR@@}/WEB-INF/lib/apache-solr-core-3.3.0.jar"/>
				
				
				<echo message="Adding custom DIH plugin ....." />
				
				<exec dir="./src/main/resources/solr-plugins" executable="${mvn}" failonerror="true">
					<arg line="clean package -Dmaven.test.skip=true"/>
				</exec>
				
				<copy todir="${@@SOLR_DEPLOY_DIR@@}/WEB-INF/lib"  overwrite="true" >
				  <fileset dir="./src/main/resources/solr-plugins/target">
				    <include name="*.jar"/>
				  </fileset>
				</copy>
			-->
	</target>



	<target name="config-db" description="creates database for ${ant.project.name}">
		<echo message="start: dumping the current database for ${ant.project.name}"/>

		<exec dir="."
				  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="false">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute='create database ${@@MYSQL.SCHEMA@@};'"/>
		</exec>
		<exec dir="."
						  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysqldump" output="${ant.project.name}_dump${current.time}.sql" failonerror="true">
			<arg line="--skip-triggers -u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} ${@@MYSQL.SCHEMA@@}"/>
		</exec>

		<echo message="end: dumping the current database for ${ant.project.name}"/>
		<echo message="start: creating DB [${@@MYSQL.SCHEMA@@}] for ${ant.project.name}"/>
		<echo message="start: trying to drop ${@@MYSQL.SCHEMA@@} database"/>
		<exec dir="."
				  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute='drop database IF EXISTS ${@@MYSQL.SCHEMA@@}; create database ${@@MYSQL.SCHEMA@@};'"/>
		</exec>
		<echo message="start: creating fresh DB[ ${@@MYSQL.SCHEMA@@}] "/>
		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source ./src/main/resources/db/run.sql'"/>
		</exec>
		<echo message="end: creating DB[${@@MYSQL.SCHEMA@@}] for ${ant.project.name}"/>
		<echo message="end: creating DB[${@@MYSQL.SCHEMA@@}] for ${ant.project.name}"/>
		<echo message="Clearing redis Cache for ${@@REDIS_PREFIX_KEY@@}" />
		<antcall target="clear-redis-cache"></antcall>
	</target>
	<!--Upgrade database when changes are made to DB scripts. -->

	<target name="upgrade-db" description="upgrades database for ${ant.project.name}">
		<echo message="start: dumping the current database for ${ant.project.name}"/>
		<echo message="Taking backup..."/>
		<exec dir="."
						  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysqldump" output="${ant.project.name}_dump_backup.sql" failonerror="true">
			<arg line=" --complete-insert -u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} ${@@MYSQL.SCHEMA@@}"/>
		</exec>
		<echo message="Creating dump..."/>
		<exec dir="."
						  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysqldump" output="${ant.project.name}_dump_upgrade.sql" failonerror="true">
			<arg line="--skip-triggers --no-create-info --complete-insert --ignore-table=${@@MYSQL.SCHEMA@@}.SEARCH_METADATA -u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} ${@@MYSQL.SCHEMA@@}"/>
		</exec>

		<exec dir="."
				  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute='drop database IF EXISTS ${@@MYSQL.SCHEMA@@}; create database ${@@MYSQL.SCHEMA@@};'"/>
		</exec>

		<echo message="start: creating fresh DB[ ${@@MYSQL.SCHEMA@@}] without DML queries "/>

		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source ./src/main/resources/db/upgrade.sql'"/>
		</exec>

		<echo message="start: inserting dump DB[ ${@@MYSQL.SCHEMA@@}] "/>

		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source ./${ant.project.name}_dump_upgrade.sql'"/>
		</exec>

		<echo message="start: Inserting bootstrap data "/>

		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source ./src/main/resources/db/Master_Data_Scripts.sql;'"/>
		</exec>
		<echo message="start: Creating triggers "/>

		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source ./src/main/resources/db/run_misc.sql;'"/>
		</exec>

		<echo message="end: upgrading DB[${@@MYSQL.SCHEMA@@}] for ${ant.project.name}"/>

	</target>

	<target name="mysql-misc" description="Responsible for recreating all mysql procedure/function,events and triggers.">
		<echo message="Start: Recreating all mysql procedure/function,events and triggers etc."/>
		<exec dir="."
				  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source ./src/main/resources/db/run_misc.sql'"/>
		</exec>
		<echo message="End: Recreating all mysql procedure/function,events and triggers etc."/>
	</target>

	<target name="create-patch" if="isUnix">
		<exec executable="/bin/chmod" failonerror="true">
			<arg line="755 ${user.dir}${file.separator}tools${file.separator}SQLPatchRunner${file.separator}unix${file.separator}SQLPatchRunner.sh"/>
		</exec>

		<exec executable="${user.dir}${file.separator}tools${file.separator}SQLPatchRunner${file.separator}unix${file.separator}SQLPatchRunner.sh" failonerror="true">
			<arg line="cp ${@@SVN.PATCH.LIST@@}"/>
		</exec>

		<input message="Proceed with DB changes ?"   validargs="y,n"    addproperty="db.apply.patch"  />

		<condition property="applyPatch">
			<equals arg1="${db.apply.patch}" arg2="y" trim="true"/>
		</condition>
	</target>

	<target name="transliteration">
                         <echo message="Start: language transliteration."/>
                         <exec executable="curl" failonerror="true">
                                 <arg line="${@@LIVE_URL@@}/marketplace/static/php/web/static_transliteration.php"/>
                         </exec>
         </target>

	<target name="db-patch" depends="create-patch" if="applyPatch">
		<echo message="Proceeding with DB changes"/>

		<echo message="start: dumping the current database in Before_dbPatchDump.sql"/>
		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysqldump" output="Before_dbPatchDump${current.time}.sql" failonerror="true">
			<arg line="--skip-triggers -u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} ${@@MYSQL.SCHEMA@@}"/>
		</exec>
		<echo message="end: dumping the current database in Before_dbPatchDump.sql"/>

		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source Cpatch.sql'"/>
		</exec>
	</target>

	<target name="run-patch" >
		<echo message="Proceeding with DB changes"/>

		<echo message="start: dumping the current database in Before_dbPatchDump.sql"/>
		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysqldump" output="Before_dbPatchDump${current.time}.sql" failonerror="true">
			<arg line="--skip-triggers -u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} ${@@MYSQL.SCHEMA@@}"/>
		</exec>

		<exec dir="."  executable="${@@MYSQL.INSTALL_DIR@@}/bin/mysql" failonerror="true">
			<arg line="-u ${@@MYSQL.USER@@} --password=${@@MYSQL.PASSWORD@@} ${@@MYSQL.SCHEMA@@} --host=${@@MYSQL.HOST@@} --port=${@@MYSQL.PORT@@} --execute=' source Cpatch.sql'"/>
		</exec>

		<echo message="All Patch.sql applied successfully."/>
		<antcall target="mysql-misc" />
	</target>


	<property name="Rname" value="b2bjustdial" />
	<property name="Rlog" value="~/home/consoleadmin" />
	<property name="RconfDir" value="D:/resin" />
	<property name="RHPort" value="8080" />
	<property name="RSPort" value="8443" />
	<property name="DRSWPort" value="6800" />
	<property name="RHName" value="www.b2bjustdial.com" />
	<property name="Rip" value="127.0.0.1" />
	<property name="Rlog" value="~/home/consoleadmin" />
	<target name="ask" >

		<echo message="=============================================" />
		<echo message="The default configuration for resin server." />
		<echo message="=============================================" />
		<echo />
		<echo message="Server name:${Rname}					(To change set cmd arg -DRname=[user_defined-name])" />
		<echo message="Server HTTP Port:${RHPort}			(To change pass -DRHPort=[http port])" />
		<echo message="Server SSL Port:${RSPort}			(To change pass -DRSPort=[SSL port])" />
		<echo message="Server WatchDog Port:${DRSWPort}		(To change pass -DRSWPort=[WatchDog Port])" />
		<echo message="Server Host Name:${RHName}			(To change pass -DRHName=[Host Name])" />
		<echo message="Server ip address:${Rip}				(To change pass -DRip=[Host IP address])" />
		<echo message="Server log dir:${Rlog}				(To change pass -DRlog=[log directory_path])" />
		<echo message="Server conf dir:${RconfDir}			(To change pass -DRconfDir=[log directory_path])" />
		<echo message="Server Document root Dir:${@@WEB_DEPLOY_DIR@@}		(To change pass -D@@WEB_DEPLOY_DIR@@=[Document root dir])" />
		<echo message="=============================================" />
		<echo />
		<input message="Ok with resin server config ?"   validargs="y,n"    addproperty="resin.config"  />
		<condition property="proceedResinInstance">
			<equals arg1="${resin.config}" arg2="y" />
		</condition>

	</target>

	<target name="new-resinInstance" depends="ask"  if="proceedResinInstance">
		<echo message="Wait, creating server instance for you"/>

		<copy todir="./tools/resin/temp/">
			<fileset dir="./tools/resin/"/>
		</copy>

		<replace dir="./tools/resin/temp">
			<include name="**/*"/>
			<replacefilter token="@@RESIN_EXECUTABLE@@" value="${Rname}"/>
			<replacefilter token="@@RESIN_CONF_DIR@@" value="${RconfDir}"/>
			<replacefilter token="@@HOST_NAME@@" value="${RHName}"/>
			<replacefilter token="@@HOST_PORT@@" value="${RHPort}"/>
			<replacefilter token="@@RESIN_LOG_DIR@@" value="${Rlog}"/>
			<replacefilter token="@@HOST_IP@@" value="${Rip}"/>
			<replacefilter token="@@SERVER_WPORT@@" value="${DRSWPort}"/>
			<replacefilter token="@@SERVER_SPORT@@" value="${RSPort}"/>
			<replacefilter token="@@WEB_DEPLOY_DIR@@" value="${@@WEB_DEPLOY_DIR@@}"/>
		</replace>

		<echo message="transferring resin server instance data to ${RconfDir} directory."/>

		<copy todir="${RconfDir}">
			<fileset dir="./tools/resin/temp/"/>
			<globmapper from="resin*" to="${Rname}*"/>
		</copy>

		<delete dir="./tools/resin/temp/" />
	</target>

	<target name="replaceImageToken" description="Modifies the jsps/css/js files to append epoc value to the image source tag." depends="copyWeb">
		<echo message="Starting to replace the timestamp token"/>
		<echo message="Replacing the timestamp tokens for : ${@@WEB_DEPLOY_DIR@@} directory"/>
		<replace dir="${@@WEB_DEPLOY_DIR@@}"  excludes="*.class">
			<replacefilter token="@@epocTimestamp@@" value="${current.epoc}"/>
		</replace>
		<echo message="Ending to replace the timestamp token"/>
	</target>

	<target name="unWarTheWeb" description="It unwar the web war file generated by maven package">
		<delete dir="${@@WEB_DEPLOY_DIR@@}"/>
		<unzip src="${web.dist.dir}/justdial-web.war" dest="${@@WEB_DEPLOY_DIR@@}"/>
	</target>

	<target name="copyWeb" description="It copies the web folder" >
		<copy todir="${@@WEB_DEPLOY_DIR@@}"  overwrite="true" >
			<fileset dir="${web.dist.dir}/justdial-web/" />
		</copy>
	</target>

	<target name="web-softLink" if="isUnix" >
		<symlink link="${@@WEB_DEPLOY_DIR@@}${file.separator}images${file.separator}product" resource="${@@SAN.BASE.DIR@@}/upload/images/product" />
		<symlink link="${@@WEB_DEPLOY_DIR@@}${file.separator}images${file.separator}company" resource="${@@SAN.BASE.DIR@@}/upload/images/company"/>
	</target>

	<target name="del-softLink" if="isUnix" >
		<symlink link="${@@WEB_DEPLOY_DIR@@}${file.separator}images${file.separator}product"  action="delete" failonerror="false" />
		<symlink link="${@@WEB_DEPLOY_DIR@@}${file.separator}images${file.separator}company"  action="delete" failonerror="false" />
	</target>
	<target name="deploy-web" description="It wars the web folder" depends="del-softLink,replaceImageToken,js-minification,web-softLink">
	</target>


	<target name="check-cond">
		<echo message="${isThisLiveServer}" />
		<condition property="condIsTrue" value="false">
			<equals arg1="${isThisLiveServer}" arg2="true" trim="true"/>
		</condition>
	</target>

	<!--<taskdef name="jsmin" classname="net.matthaynes.jsmin.JSMin_Task" classpath="./tools/External_Jars/jsmin.0.2.4.jar" />-->

	<target name="js-minification">
		<echo level="info" message="Compressing JavaScript and CSS files...." />
		<available file="./tools/External_Jars/YUIAnt.jar" property="YUIANT_AVAILABLE" />
		<fail unless="YUIANT_AVAILABLE" message="Run jar target to generate the required task"/>
		<path id="yuicompressor.classpath">
			<fileset dir="./tools/External_Jars/">
				<include name="yuicompressor-2.4.7.jar"/>
				<include name="YUIAnt.jar"/>
			</fileset>
		</path>
		<taskdef name="yuicompress" classname="com.yahoo.platform.yui.compressor.YUICompressTask">
			<classpath>
				<path refid="yuicompressor.classpath"/>
			</classpath>
		</taskdef>
		<yuicompress warn="false" munge="no" preserveallsemicolons="true" outputfolder="${@@WEB_DEPLOY_DIR@@}" preservestringlitterals="false">
			<fileset dir="${@@WEB_DEPLOY_DIR@@}">
				<include name="scripts/**/*.js" />
				<include name="styles/**/*.css" />
			</fileset>

		</yuicompress>
		<echo level="info" message="Compression Complete" />
	</target>

	<!--<target name="js-minification2 " description="It minifies the js files" depends="check-cond" if="condIsTrue" >
    			
    	    	<jsmin force="true">
    	        	<fileset dir="${@@WEB_DEPLOY_DIR@@}/scripts/" includes="**/*.js"/>
					<fileset dir="${@@WEB_DEPLOY_DIR@@}/styles/" includes="**/*.css"/>
    	    	</jsmin>
    	  	</target>-->

	<target name="solr-fullImport" description="Process for full Solr data imprting" if="isUnix">
		<echo message="Solar Full data import Start...." />

		<echo message="Importing for: ${@@PRODUCT_CORE@@}"/>
		<exec dir="." executable="/usr/bin/wget" failonerror="true">
			<arg line="-q -O /dev/null ${@@SOLR_BASE_URL@@}/${@@PRODUCT_CORE@@}/dataimport?command=full-import" />
		</exec>

		<echo message="Importing for: ${@@PUV_CORE@@}"/>
		<exec dir="." executable="/usr/bin/wget" failonerror="true">
			<arg line="-q -O /dev/null ${@@SOLR_BASE_URL@@}/${@@PUV_CORE@@}/dataimport?command=full-import" />
		</exec>

		<echo message="Importing for: ${@@LOCATION_CORE@@}"/>
		<exec dir="." executable="/usr/bin/wget" failonerror="true">
			<arg line="-q -O /dev/null ${@@SOLR_BASE_URL@@}/${@@LOCATION_CORE@@}/dataimport?command=full-import" />
		</exec>

		<echo message="Importing for: ${@@KEYWORD_CORE@@}"/>
		<exec dir="." executable="/usr/bin/wget" failonerror="true">
			<arg line="-q -O /dev/null ${@@SOLR_BASE_URL@@}/${@@KEYWORD_CORE@@}/dataimport?command=full-import" />
		</exec>

		<echo message="Importing for: ${@@SUPPLIER_CORE@@}"/>
		<exec dir="." executable="/usr/bin/wget" failonerror="true">
			<arg line="-q -O /dev/null ${@@SOLR_BASE_URL@@}/${@@SUPPLIER_CORE@@}/dataimport?command=full-import" />
		</exec>

		<echo message="Solar Full data import End...." />
	</target>

	<target name="copy-reloadable-config" description="will copy all reloadable property file">
		<exec executable="sh">
			<arg value="-c" />
			<arg value="svn revert ./src/main/resources/external-properties/externalConfig.properties"/>
		</exec>
		<replace file="./src/main/resources/external-properties/externalConfig.properties" replacefilterfile="build_local.properties"/>
        <replace file="./src/main/resources/external-properties/externalConfig.properties" replacefilterfile="build_default.properties"/>

		<copy todir="${@@SAN.BASE.DIR@@}/resources/external-properties" overwrite="true">
			<fileset dir="./src/main/resources/external-properties"/>
		</copy>
	</target>

	<target name="install-start-redis" description="will install and start redis">

		<copy todir="./tools/Redis/temp/">
			<fileset dir="./tools/Redis/" />
		</copy>

		<replace dir="./tools/Redis/temp">
			<include name="**/*" />
			<replacefilter token="@@INSTALLATION_DIR@@" value="${@@INSTALLATION_DIR@@}" />
		</replace>

		<echo message="Wait, creating REDIS server instance for you" />
		<exec executable="/bin/sh">
			<arg value="./tools/Redis/temp/redis-installation.sh" />
		</exec>
		 <delete dir="./tools/Redis/temp"/>
	</target>
	<target name="clear-redis-cache" description="Removes redis keys for prefix ${@@REDIS_PREFIX_KEY@@}">
		<copy todir="./tools/Redis/temp/">
			<fileset dir="./tools/Redis/" />
		</copy>
		<replace dir="./tools/Redis/temp">
			<include name="**/*" />
			<replacefilter token="@@INSTALLATION_DIR@@" value="${@@INSTALLATION_DIR@@}" />
			<replacefilter token="@@REDIS.HOST.IP@@" value="${@@REDIS.HOST.IP@@}" />
			<replacefilter token="@@REDIS.HOST.PORT@@" value="${@@REDIS.HOST.PORT@@}" />
			<replacefilter token="@@REDIS_PREFIX_KEY@@" value="${@@REDIS_PREFIX_KEY@@}" />
			<replacefilter token="@@MYSQL.HOST@@" value="${@@MYSQL.HOST@@}" />
			<replacefilter token="@@MYSQL.SCHEMA@@" value="${@@MYSQL.SCHEMA@@}" />

		</replace>
		<echo message="Clearing redis Cache for ${@@REDIS_PREFIX_KEY@@}" />
		<exec executable="/bin/sh">
			<arg value="./tools/Redis/temp/delete-keys.sh" />
		</exec>
		<delete dir="./tools/Redis/temp"/>
	</target>

	<target name="create-job-processor" >

		<exec dir="." executable="${mvn}" failonerror="true">
			<arg line="clean -P job-processor -Dmaven.test.skip=${skipTest}"/>
		</exec>
		
		<exec dir="." executable="${mvn}" failonerror="true">
			<arg line="package -P job-processor -Dmaven.test.skip=${skipTest}"/>
		</exec>

		<mkdir dir="${job.dist.dir}/jobProcesssor"/>
		<mkdir dir="${job.dist.dir}/jobProcesssor/bin"/>
		<mkdir dir="${job.dist.dir}/jobProcesssor/lib"/>
		<mkdir dir="${job.dist.dir}/jobProcesssor/conf"/>
		<mkdir dir="${job.dist.dir}/jobProcesssor/log"/>
		<copy todir="${job.dist.dir}/jobProcesssor/bin">
    			<fileset dir="${job.dist.dir}/../scripts"/>
  		</copy>
		<copy todir="${job.dist.dir}/jobProcesssor/conf">
    			<fileset dir="${job.dist.dir}/../res/main"/>
  		</copy>
		<replace dir="${job.dist.dir}/jobProcesssor" replacefilterfile="build_local.properties" />
		<replace dir="${job.dist.dir}/jobProcesssor" replacefilterfile="build_default.properties" />
		
		<copy file="${job.dist.dir}/justdial-job-processor.jar" todir="${job.dist.dir}/jobProcesssor/lib"/>
	</target>

	<target name="deploy-job-processor" depends="revertAll, replaceVersion, create-job-processor">
		<antcall target="restart-job-processor" />
	</target>
	
	<target name="restart-job-processor">
		<taskdef resource="net/sf/antcontrib/antlib.xml">
  			<classpath>
    			<pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
  			</classpath>
		</taskdef>
		
		<property name="counter" value="0" />
		<property name="queueNames" value="${@@JOB.PROCESSOR.QUEUES@@}"/>
		<property name="socketPorts" value="${@@JOB.PROCESSOR.SOCKET.PORT@@}"/>
		<property name="memoryLimits" value="${@@JOB.PROCESSOR.MEMORY.ALLOCATION@@}"/>
		<property name="debugPorts" value="${@@JOB.PROCESSOR.DEBUG.PORT@@}"/>

		<for list="${@@JOB.PROCESSOR.PATH@@}" param="path" delimiter=";">
			<sequential>
				<echo message="Performing tasks for location : @{path}" />
				
				<echo message="Shutting Down Job-Processor" />
				<exec executable="/bin/sh">
					<arg value="@{path}/bin/shutdown.sh" />
				</exec>
				
				<delete dir="@{path}"/>
				<mkdir dir="@{path}"/>
				<copy todir="@{path}">
				    <fileset dir="./justdial-job-processor/target/jobProcesssor">
						<include name="bin/**" />
						<include name="conf/**" />
						<include name="lib/**" />
						<include name="log/**" />
				    </fileset>
				</copy>
				
				<script language="javascript">
			    	var queueNames = project.getProperty("queueNames").split(";");
					var socketPorts = project.getProperty("socketPorts").split(";");
					var memoryLimits = project.getProperty("memoryLimits").split(";");
					var debugPorts = project.getProperty("debugPorts").split(";");

					var counter = parseInt(project.getProperty("counter"));
			    	
					project.setProperty("queueName", queueNames[counter]);
					project.setProperty("socketPort", socketPorts[counter]);
					project.setProperty("memoryLimit", memoryLimits[counter]);
					project.setProperty("debugPort", debugPorts[counter])
					counter++;
					
					project.setProperty("counter", counter);
			    </script>
				
				<echo message="Replacing tokens" />
				<replace dir="@{path}/conf/">
					<include name="**/*.*"/>
					<replacefilter token="@@QUEUE.NAME@@" value="${queueName}"/>
					<replacefilter token="@@PATH@@" value="@{path}"/>
					<replacefilter token="@@JP.SOCKET.PORT@@" value="${socketPort}"/>
				</replace>
				
				<replace dir="@{path}/bin/">
					<include name="**/*.*"/>
					<replacefilter token="@@MAX.MEMORY@@" value="${memoryLimit}"/>
					<replacefilter token="@@DEBUG.PORT@@" value="${debugPort}"/>
				</replace>
				
				<echo message="Starting Job-Processor" />
				<exec executable="/bin/sh">
					<arg value="@{path}/bin/startup.sh" />
				</exec>
				<echo message="-----------------------------------------------------" />
			</sequential>
		</for>
	</target>
	
    <target name = "create-job-processor-master" depends="revertAll, replaceVersion">

          <echo message="Started" />

        <exec dir="." executable="${mvn}" failonerror="true">
			<arg line="clean -P job-processor -Dmaven.test.skip=${skipTest}"/>
		</exec>
		
		<exec dir="." executable="${mvn}" failonerror="true">
			<arg line="package -P job-processor -Dmaven.test.skip=${skipTest}"/>
		</exec>


	<mkdir dir="${job.dist.dir}/JP_MASTER"/>
        <property name="masterPath" value="${job.dist.dir}/JP_MASTER"/>

        <copy todir="${masterPath}">
                        <fileset dir="${job.dist.dir}/../jp-master"/>
                </copy>

	<mkdir dir="${masterPath}/jobProcesssor"/>

		<mkdir dir="${masterPath}/jobProcesssor/bin"/>
		<mkdir dir="${masterPath}/jobProcesssor/lib"/>
		<mkdir dir="${masterPath}/jobProcesssor/conf"/>
		<mkdir dir="${masterPath}/jobProcesssor/log"/>

		<copy todir="${masterPath}/jobProcesssor/bin">
    			<fileset dir="${job.dist.dir}/../master-conf/scripts"/>
  		</copy>

		<copy todir="${masterPath}/jobProcesssor/conf">
    			<fileset dir="${job.dist.dir}/../master-conf/res/main"/>
  		</copy>
		
		<copy file="${job.dist.dir}/justdial-job-processor.jar" todir="${masterPath}/jobProcesssor/lib"/>

                <property file="build_local.properties" />
                <property file="build_default.properties" />

                <copy todir="${@@JOB.PROCESSOR.MASTER.PATH@@}">
                        <fileset dir="${masterPath}"/>
                </copy>

    </target>	

	<target name="deploy-pos-sync" >
		<mkdir dir="${pos.dist.dir}/posSync"/>
		<mkdir dir="${pos.dist.dir}/posSync/bin"/>
		<mkdir dir="${pos.dist.dir}/posSync/lib"/>
		<mkdir dir="${pos.dist.dir}/posSync/conf"/>
		<mkdir dir="${pos.dist.dir}/posSync/log"/>
		<copy todir="${pos.dist.dir}/posSync/bin">
    			<fileset dir="${pos.dist.dir}/../scripts"/>
  		</copy>
		<copy todir="${pos.dist.dir}/posSync/conf">
    			<fileset dir="${pos.dist.dir}/../res/"/>
  		</copy>
		<replace dir="${pos.dist.dir}/posSync/conf" replacefilterfile="build_local.properties" />
		<copy file="${pos.dist.dir}/justdial-pos-sync-1.0-SNAPSHOT.jar" todir="${pos.dist.dir}/posSync/lib"/>
	</target>

	<target name="deploy-pos-server" depends="get-svn-revision">
        <mkdir dir="${posServer.dist.dir}/posServer"/>
        <mkdir dir="${posServer.dist.dir}/posServer/bin"/>
        <mkdir dir="${posServer.dist.dir}/posServer/lib"/>
        <mkdir dir="${posServer.dist.dir}/posServer/conf"/>
        <mkdir dir="${posServer.dist.dir}/posServer/log"/>
        <mkdir dir="${posServer.dist.dir}/posServer/db"/>
        <copy todir="${posServer.dist.dir}/posServer/bin">
                <fileset dir="${posServer.dist.dir}/../scripts"/>
          </copy>
        <copy todir="${posServer.dist.dir}/posServer/db">
                <fileset dir="${posServer.dist.dir}/../db"/>
          </copy>
        <copy todir="${posServer.dist.dir}/posServer/conf">
                <fileset dir="${posServer.dist.dir}/../res/"/>
          </copy>
        <replace dir="${posServer.dist.dir}/posServer/conf" replacefilterfile="build_local.properties" />
        <replace dir="${posServer.dist.dir}/posServer/conf">
            <include name="**/*.*"/>
            <replacefilter token="@@srev@@" value="${srev}"/>
        </replace>
        <copy file="${posServer.dist.dir}/justdial-pos-server-1.0-SNAPSHOT.jar" todir="${posServer.dist.dir}/posServer/lib"/>
    </target> 
    

     <target name="package-pos-server">
		 
		<mkdir dir="tools/App/pos-software-update/res/"/>
		
		<exec executable="sh">
			<arg value="-c" />
			<arg value="svn revert --depth=infinity tools/App/pos-software-update/tokenised-res"/>
		</exec>

 		<copy todir="tools/App/pos-software-update/res/" overwrite="true">
				<fileset dir="tools/App/pos-software-update/tokenised-res/"/>
        </copy> 
        
        <replace dir="tools/App/pos-software-update/res/" replacefilterfile="build_local.properties" />
        <replace dir="tools/App/pos-software-update/res/" replacefilterfile="build_default.properties" />
       
        
		<copy todir="${pos.server.installation.dir}">
				<fileset dir="tools/App/pos-software-update/res/"/>
        </copy>
        

        </target>   

	<target name="package-printer">
		
		<mkdir dir="tools/App/jdps-software-update/res/"/>
		
		<copy todir="tools/App/jdps-software-update/res/"  overwrite="true">
				<fileset dir="tools/App/jdps-software-update/tokenised-res/"/>
        </copy>
		<replace dir="tools/App/jdps-software-update/res/" replacefilterfile="build_local.properties" />
                <replace dir="tools/App/jdps-software-update/res/" replacefilterfile="build_default.properties" />
		<copy todir="${pos.printer.installation.dir}">
				<fileset dir="tools/App/jdps-software-update/res/"/>
        </copy>
         
	     <copy todir="${pos.printer.installation.dir}/jre/">
               <fileset dir="${@@DEPENDENCY.DIR@@}/"/>
         </copy>
          
     </target>   
        
	  

    <target name="deploy-printer" description="Call mvn package with test. ">
		<exec executable="sh">
			<arg value="-c" />
			<arg value="svn revert pom.xml"/>
		</exec>
			<exec executable="sh">
			<arg value="-c" />
			<arg value="svn revert tools/App/justdial-printer/pom.xml"/>
		</exec>

         <replace file="pom.xml" replacefilterfile="build_local.properties"/>
 		 <replace file="pom.xml" replacefilterfile="build_default.properties"/>
 		 <replace file="tools/App/justdial-printer/pom.xml" replacefilterfile="build_local.properties"/>
 		 <replace file="tools/App/justdial-printer/pom.xml" replacefilterfile="build_default.properties"/>


            <exec dir="." executable="${mvn}" failonerror="true">
				<arg line="clean -P printer -Dmaven.test.skip=true"/>
			</exec>		   
			<exec dir="." executable="${mvn}" failonerror="true">
				<arg line="package -P printer -Dmaven.test.skip=true"/>
			</exec>
			<exec dir="." executable="${mvn}" failonerror="true">
				<arg line="deploy -P printer -Dmaven.test.skip=true"/>
			</exec>

	</target>   
    
    <target name="deploy-pos"  depends="sendMail, revertAll, replaceVersion" description="Call mvn package with test. ">

 			<replace file="pom.xml" replacefilterfile="build_default.properties"/>

            <exec dir="." executable="${mvn}" failonerror="true">
				<arg line="clean -P offline"/>
			</exec>	
			
			<antcall target="get-svn-revision" />
            <exec dir="." executable="${mvn}" failonerror="true">
				<arg line="clean package -P offline -Dmaven.test.skip=true"/>
			</exec>	

			<exec dir="." executable="${mvn}" failonerror="true">
				<arg line="deploy -P offline"/>
			</exec>	

			
	</target>


	<target name="nodejs-minify">
		<echo message="Starting minifying css and js files."/>
		<exec executable="/bin/sh">
			<arg value="tools/nodejs/minify_files.sh"/>
			<arg value="${admin.dist.dir}/justdial-admin-web"/>
		</exec>
		<echo message="Minifying css and js files completed."/>
	</target>

	<target name="nodeServerbuild" if="${skipnodeStart}">
		<echo message="Starting node JS deployment."/>
	<exec executable="/bin/bash">
		        <arg value="tools/nodejs/nodeServer.sh"/>
		        <arg value="${@@NODEIP@@}"/>
		        <arg value="${@@NODEPATH@@}"/>
		        <arg value="${@@NODEENVPROD@@}"/>
		        <arg value="false"/>
		        <arg value="${omni.src.dir}"/>
		        <arg value="${firstattempt}"/>
		</exec>
	</target>
	
        <target name="nodeServerstart" if="${skipnodeStart}">
                <echo message="Starting node JS deployment."/>
                <exec executable="/bin/bash">
                      <arg value="tools/nodejs/nodeServer.sh"/>
                      <arg value="${@@NODEIP@@}"/>
                      <arg value="${@@NODEPATH@@}"/>
                      <arg value="${@@NODEENVPROD@@}"/>
                      <arg value="true"/>
                      <arg value="${omni.src.dir}"/>
                      <arg value="${firstattempt}"/>
                    
                 </exec>
        </target>

	<target name="osheen">
	      <echo message="testing purpose"/>

	      <exec executable="/bin/sh">
	          <arg value="/home/osheen/dummy.sh"/>
	          <arg value="${firstattempt}"/>            
	          <arg value="${skipnodeStart}"/>
	          <arg value="${omni.src.dir}"/>
	          </exec>
	</target>

	<target name="sendMail">

        <input message="Please enter svn user ID?" addproperty="your-name" />
		<echo>Initiating deployment, ${your-name}</echo>

	    <exec executable="svnversion" outputproperty="svnversion" />
	   	<echo message="SVN Version: ${svnversion}"/>

		<exec executable="/bin/sh">
			  <arg value="-c" />
			  <arg value="java  -DuserName=${your-name} -Drevision=${svnversion} -DposServer=${@@POS.MAVEN.REPO.URL@@} -jar tools/MailSender/EmailSender.jar"/>
		</exec>
	</target>

	 <target name="replaceVersion">
				
		<replace dir=".">
			<include name="**/pom.xml"/>
			<replacefilter token="@@MAVEN.VERSION@@" value="${@@MAVEN.VERSION@@}"/>
			<replacefilter token="@@POS.MAVEN.REPO.ID@@" value="${@@POS.MAVEN.REPO.ID@@}"/>
			<replacefilter token="@@POS.MAVEN.REPO.NAME@@" value="${@@POS.MAVEN.REPO.NAME@@}"/>
			<replacefilter token="@@POS.MAVEN.REPO.URL@@" value="${@@POS.MAVEN.REPO.URL@@}"/>
		</replace>
	</target>

	<target name="revertAll">
		<exec executable="sh">
			<arg value="-c" />
			<arg value="svn revert **/*pom.xml"/>
		</exec>

		<exec executable="sh">
			<arg value="-c" />
			<arg value="svn revert pom.xml"/>
		</exec>
		
		</target>


<target name="deploy-online" description="Call mvn package with test. If you want to skip test add -Dmaven.test.skip=true" depends=" revertAll, clean, replaceVersion">
		<replace file="pom.xml" replacefilterfile="build_local.properties"/>
 		<replace file="pom.xml" replacefilterfile="build_default.properties"/>

 		<taskdef resource="net/sf/antcontrib/antlib.xml">
  			<classpath>
    		<pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
  		</classpath>
		</taskdef>
	
	   <condition property="include.set" else="false">
	      <isset property="include"/>
	    </condition>


		  <if>
			<equals arg1="${include.set}" arg2="false"/>
			 <then>
			    <echo message="The value of property foo is bar" />
					<property name="options" value=""/>	  
					<property name="extraOptions" value=""/>	 
				   <echo message="-------------------1---------------------" />
 				 </then>
				  <else>
				  	<echo message="-------------------2-------------------" />
				   	<property name="options" value="-pl ${include}"/>	  
					<property name="extraOptions" value="-am"/>	  
				 </else>
				</if>

		<condition property="profile.set" else="false">
	      <isset property="profile"/>
	    </condition>

			<if>
			 <equals arg1="${profile.set}" arg2="false"/>
				 <then>
				   <echo message="-------------------3---------------------" />
				 	<exec dir="." executable="${mvn}" failonerror="true">
					<arg line="clean package -P online -Dmaven.test.skip=${skipTest}"/>
					</exec> 
				 </then>
			 <else>
			   <echo message="-------------------4---------------------${profile}" />
			 <if>
			 <equals arg1="${profile}" arg2="deploy-online"/>
				 <then>
				 	<exec dir="." executable="${mvn}" failonerror="true">
					<arg line="package -P online -Dmaven.test.skip=${skipTest}"/>
					</exec> 

					<exec dir="." executable="${mvn}" failonerror="true">
						<arg line="deploy -P deploy-online ${options} -Dmaven.test.skip=${skipTest}"/>
				   </exec> 			   
				 </then>
	    	 <else>
					<if>
					 <equals arg1="${profile}" arg2="build-online"/>

					 <then>

					 	<exec dir="." executable="${mvn}" failonerror="true">
							<arg line="clean package deploy -f justdial-config/pom.xml -Dmaven.test.skip=${skipTest}"/>
						</exec> 

					 	<exec dir="." executable="${mvn}" failonerror="true">
							<arg line="package -P build-online -Dmaven.test.skip=${skipTest}"/>
						</exec> 
					 </then>
					 </if>
		    	</else>
			 </if>		
			</else>
			</if>

	</target>
 
 <target name="applyPatch">
		<exec executable="sh">
			<arg value="-c" />
			<arg value="patch tools/patch/diff.patch"/>
		</exec>
</target>

 <target name="revertPatch">
		<exec executable="sh">
			<arg value="-c" />
			<arg value="patch -R tools/patch/diff.patch"/>
		</exec>
</target>
<target name="static-copy">
<copy todir="${@@STATIC_HOME@@}" overwrite="true" >
<fileset dir="${admin.dist.dir}/justdial-admin-web/" includes="**">
<exclude name="**/*.htm"/>
<exclude name="nodeJs/**"/>
</fileset>
</copy>
<copy todir="${@@STATIC_HOME@@}" overwrite="true" >
<fileset dir="${admin.dist.dir}/justdial-admin-web/" includes="**/*.htm">
</fileset>
</copy>
<copy todir="${@@STATIC_HOME@@}" force="true" overwrite="true">
<fileset dir="${static.src.dir}/">
<include name="gis/**" />
<include name="images/**" />
 <include name="less/**" />
 <include name="other/**" />
 <include name="styles/**" />
 <include name="searchUser/**" />
 <include name="templates/**" />
 <include name="index.htm" />
 <include name="firebase-messaging-sw.js" />
</fileset>
</copy>
</target>
<target name="phpbuild">

            <copy todir="${admin.dist.dir}/justdial-admin-web/" overwrite="true" >
                    <fileset dir="${static.src.dir}/">
                        <include name="static/php/**"/>
                    </fileset>
            </copy>

            <echo message="Token Replacement Starting"/>
            <replace dir="${admin.dist.dir}/justdial-admin-web/">
			<include name="static/php/**"/>
                        <replacefilter token="@@MYSQL.HOST@@" value="${@@MYSQL.HOST@@}"/>
                        <replacefilter token="@@MYSQL.USER@@" value="${@@MYSQL.USER@@}"/>
                        <replacefilter token="@@MYSQL.USER.PHP@@" value="${@@MYSQL.USER.PHP@@}"/>
                        <replacefilter token="@@MYSQL.PASSWORD@@" value="${@@MYSQL.PASSWORD@@}"/>
                        <replacefilter token="@@MYSQL.PASSWORD.PHP@@" value="${@@MYSQL.PASSWORD.PHP@@}"/>
                        <replacefilter token="@@MYSQL.SCHEMA@@" value="${@@MYSQL.SCHEMA@@}"/>
                        <replacefilter token="@@MONGO.HOST.IP@@" value="${@@MONGO.HOST.IP@@}"/>
                        <replacefilter token="@@MONGO.HOST.PORT@@" value="${@@MONGO.HOST.PORT@@}"/>
                        <replacefilter token="@@SMS.EMAIL.SERVER.HOST@@" value="${@@SMS.EMAIL.SERVER.HOST@@}"/>
                        <replacefilter token="@@SMS.EMAIL.SERVER.USER@@" value="${@@SMS.EMAIL.SERVER.USER@@}"/>
                        <replacefilter token="@@SMS.EMAIL.SERVER.PASSWORD@@" value="${@@SMS.EMAIL.SERVER.PASSWORD@@}"/>
                        <replacefilter token="@@SMS.EMAIL.SERVER.SCHEMA@@" value="${@@SMS.EMAIL.SERVER.SCHEMA@@}"/>
                        <replacefilter token="@@MONGO.PHP.CONNECTION.URL@@" value="${@@MONGO.PHP.CONNECTION.URL@@}"/>
                        <replacefilter token="@@SERVER_URL@@" value="${@@SERVER_URL@@}"/>
                        <replacefilter token="@@LIVE_URL@@" value="${@@LIVE_URL@@}"/>
                        <replacefilter token="@@SHOP_URL@@" value="${@@SHOP_URL@@}"/>
                        <replacefilter token="@@PREVIEW_URL@@" value="${@@PREVIEW_URL@@}"/>
                        <replacefilter token="@@SHOP_JD_URL@@" value="${@@SHOP_JD_URL@@}"/>
                        <replacefilter token="@@CMS_SHOP_URL@@" value="${@@CMS_SHOP_URL@@}"/>
                        <replacefilter token="@@CMSSITE_SHOP_URL@@" value="${@@CMSSITE_SHOP_URL@@}"/>
                        <replacefilter token="@@DEMO_SHOP_SUPID@@" value="${@@DEMO_SHOP_SUPID@@}"/>
                        <replacefilter token="@@SOLR_BASE_URL@@" value="${@@SOLR_BASE_URL@@}"/>
                        <replacefilter token="@@SOLR_BASE_URL_AUTOSUGGEST@@" value="${@@SOLR_BASE_URL_AUTOSUGGEST@@}"/>
                        <replacefilter token="@@SOLR_BASE_URL_JUSTDIAL@@" value="${@@SOLR_BASE_URL_JUSTDIAL@@}"/>
                        <replacefilter token="@@SOLR_BASE_URL_ALLCORE@@" value="${@@SOLR_BASE_URL_ALLCORE@@}"/>
                        <replacefilter token="@@BILL_PAYMENT_URL@@" value="${@@BILL_PAYMENT_URL@@}"/>
                        <replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
                        <replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
                        <replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
                        <replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
                        <replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
                        <replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
                        <replacefilter token="@@AMAZON_ACCESS_KEY_ID@@" value="${@@AMAZON_ACCESS_KEY_ID@@}"/>
                        <replacefilter token="@@AMAZON_SECRET_ACCESS_KEY@@" value="${@@AMAZON_SECRET_ACCESS_KEY@@}"/>
                        <replacefilter token="@@ECS.SDK.LOCATION@@" value="${@@ECS.SDK.LOCATION@@}"/>
                        <replacefilter token="@@SAN.BASE.DIR@@" value="${@@SAN.BASE.DIR@@}"/>
                        <replacefilter token="@@SAN.BASE.DIR.NEW@@" value="${@@SAN.BASE.DIR.NEW@@}"/>
                        <replacefilter token="@@MYSQL_ALLOWED_OPERATIONS@@" value="${@@MYSQL_ALLOWED_OPERATIONS@@}"/>
                        <replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
                        <replacefilter token="@@STATIC_HOME@@" value="${@@STATIC_HOME@@}"/>
                    <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
                    <replacefilter token="@@MYSQL.HOST.SLAVE@@" value="${@@MYSQL.HOST.SLAVE@@}"/>
                    <replacefilter token="@@MYSQL.SLAVE.HOSTS@@" value="${@@MYSQL.SLAVE.HOSTS@@}"/>
                    <replacefilter token="@@MYSQL.SLAVE_58.HOST@@" value="${@@MYSQL.SLAVE_58.HOST@@}"/>
                    <replacefilter token="@@MYSQL.SOLR_SLAVE_57.HOST@@" value="${@@MYSQL.SOLR_SLAVE_57.HOST@@}"/>
                    <replacefilter token="@@SERVICE_CONTRACT_URL@@" value="${@@SERVICE_CONTRACT_URL@@}"/>
                    <replacefilter token="@@REDIS.HOST.IP@@" value="${@@REDIS.HOST.IP@@}"/>
                    <replacefilter token="@@REDIS.HOST.PORT@@" value="${@@REDIS.HOST.PORT@@}"/>
                    <replacefilter token="@@REDIS.PASSWORD@@" value="${@@REDIS.PASSWORD@@}"/>
                    <replacefilter token="@@REDIS_PREFIX_KEY@@" value="${@@REDIS_PREFIX_KEY@@}" />
                    <replacefilter token="@@REDIS_JD.HOST.IP@@" value="${@@REDIS_JD.HOST.IP@@}"/>
                    <replacefilter token="@@REDIS_JD.HOST.PORT@@" value="${@@REDIS_JD.HOST.PORT@@}"/>
                    <replacefilter token="@@REDIS_JD.PASSWORD@@" value="${@@REDIS_JD.PASSWORD@@}"/>
                    <replacefilter token="@@REDIS_JD_PREFIX_KEY@@" value="${@@REDIS_JD_PREFIX_KEY@@}" />
                        <replacefilter token="@@JD_BUILDER_URL@@" value="${@@JD_BUILDER_URL@@}"/>
                        <replacefilter token="@@REPORTS_URL@@" value="${@@REPORTS_URL@@}"/>
                        <replacefilter token="@@LME_CLIENT_ID@@" value="${@@LME_CLIENT_ID@@}"/>
                        <replacefilter token="@@LME_CLIENT_SECRET@@" value="${@@LME_CLIENT_SECRET@@}"/>
                        <replacefilter token="@@LME_API_URL@@" value="${@@LME_API_URL@@}"/>
                        <replacefilter token="@@LME_REDIRECT_URL@@" value="${@@LME_REDIRECT_URL@@}"/>
                        <replacefilter token="@@HTTPS_SERVER_URL@@" value="${@@HTTPS_SERVER_URL@@}"/>
                        <replacefilter token="@@MYSQL.MULTI.HOSTS@@" value="${@@MYSQL.MULTI.HOSTS@@}"/>
                        <replacefilter token="@@MYSQL.CRON.READ.HOST@@" value="${@@MYSQL.CRON.READ.HOST@@}"/>
						<replacefilter token="@@MYSQL.CRON.WRITE.HOST@@" value="${@@MYSQL.CRON.WRITE.HOST@@}"/>
						<replacefilter token="@@MYSQL.CRON.USER@@" value="${@@MYSQL.CRON.USER@@}"/>
						<replacefilter token="@@MYSQL.CRON.PASSWORD.PHP@@" value="${@@MYSQL.CRON.PASSWORD.PHP@@}"/>
                        <replacefilter token="@@MYSQL.MULTI_SLAVE.HOSTS@@" value="${@@MYSQL.MULTI_SLAVE.HOSTS@@}"/>
                        <replacefilter token="@@TRANSLITERATION.SERVER.HOST@@" value="${@@TRANSLITERATION.SERVER.HOST@@}"/>
                        <replacefilter token="@@TRANSLITERATION.SERVER.SCHEMA@@" value="${@@TRANSLITERATION.SERVER.SCHEMA@@}"/>
                        <replacefilter token="@@STATICIMG_DOMAIN@@" value="${@@STATICIMG_DOMAIN@@}"/>
                        <replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}"/>
                        <replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}"/>
                        <replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}"/>
                        <replacefilter token="@@staticIp4@@" value="${@@STATIC_IP4@@}"/>
                        <replacefilter token="@@staticIp5@@" value="${@@STATIC_IP5@@}"/>
                        <replacefilter token="@@PINCODE.LATLONG.SERVER@@" value="${@@PINCODE.LATLONG.SERVER@@}"/>
                        <replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
                        <replacefilter token="@@DOCTOR_URL@@" value="${@@DOCTOR_URL@@}"/>
                        <replacefilter token="@@DIALER_SCHEMA@@" value="${@@DIALER_SCHEMA@@}"/>
                        <replacefilter token="@@DIALER_USERNAME@@" value="${@@DIALER_USERNAME@@}"/>
                        <replacefilter token="@@DIALER_PASSWORD@@" value="${@@DIALER_PASSWORD@@}"/>
                  <replacefilter token="@@OFFERS_URL@@" value="${@@OFFERS_URL@@}"/>
                  <replacefilter token="@@API_1@@" value="${@@API_1@@}"/>
                  <replacefilter token="@@API_2@@" value="${@@API_2@@}"/>
                  <replacefilter token="@@API_3@@" value="${@@API_3@@}"/>
                  <replacefilter token="@@MKTAPI_URL@@" value="${@@MKTAPI_URL@@}"/>
                  <replacefilter token="@@ENV@@" value="${@@ENV@@}"/>
                  <replacefilter token="@@SECUREPG@@" value="${@@SECUREPG@@}"/>
                  <replacefilter token="@@SECUREPG_INFOURL@@" value="${@@SECUREPG_INFOURL@@}"/>
                  <replacefilter token="@@BASE_URL@@" value="${@@BASE_URL@@}"/>
                        <replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
                        <replacefilter token="@@ORDER_MESSAGE_HOST@@" value="${@@ORDER_MESSAGE_HOST@@}"/>
                        <replacefilter token="@@ORDER_MESSAGE_USER@@" value="${@@ORDER_MESSAGE_USER@@}"/>
                        <replacefilter token="@@ORDER_MESSAGE_PASSWORD@@" value="${@@ORDER_MESSAGE_PASSWORD@@}"/>
                        <replacefilter token="@@KYC_INVOICE_IMAGE_DOMAIN@@" value="${@@KYC_INVOICE_IMAGE_DOMAIN@@}"/>
                        <replacefilter token="@@KYC_HOST@@" value="${@@KYC_HOST@@}"/>
                        <replacefilter token="@@APIDOMAIN@@" value="${@@APIDOMAIN@@}"/>
                        <replacefilter token="@@CATEGORY_APIDOMAIN@@" value="${@@CATEGORY_APIDOMAIN@@}"/>
                        <replacefilter token="@@PAYMENT_ENV@@" value="${@@PAYMENT_ENV@@}"/>
                        <replacefilter token="@@TRAC_SERVER@@" value="${@@TRAC_SERVER@@}"/>
                        <replacefilter token="@@TRAC_USER@@" value="${@@TRAC_USER@@}"/>
                        <replacefilter token="@@TRAC_PSWD@@" value="${@@TRAC_PSWD@@}"/>
                        <replacefilter token="@@VERTICAL_APIS@@" value="${@@VERTICAL_APIS@@}"/>
                        <replacefilter token="@@srev@@" value="${srev}${time}"/>
                        <replacefilter token="@@API_REV@@" value="${srev}-${current_apitime}${APICACHED}"/>
                        <replacefilter token="@@B2B_URL@@" value="${@@B2B_URL@@}"/>
						<replacefilter token="@@B2B_EMAIL_URL@@" value="${@@B2B_EMAIL_URL@@}"/>
                        <replacefilter token="@@REDIRECT_URL@@" value="${@@REDIRECT_URL@@}"/>
                        <replacefilter token="@@PRESCRIPTION_VERTICAL_LIST@@" value="${@@PRESCRIPTION_VERTICAL_LIST@@}"/>
                        <replacefilter token="@@DATAJANUSLB_URL@@" value="${@@DATAJANUSLB_URL@@}"/>
                </replace>

	        <copy todir="${@@STATIC_HOME@@}" overwrite="true" >
                	<fileset dir="${admin.dist.dir}/justdial-admin-web/">
				        <include name="static/php/**"/>
                	</fileset>
            </copy>
</target>

<target name="omni-service">
<record name="/home/mpweb/work/projects/omni_service.txt" action="start" append="false" />
		   <echo message="Omni-Service Target Called" />
           <delete includeemptydirs="true" failonerror="false">
               <fileset dir="${omni.src.dir}/omni-services/nodeJs">
               		<include name="**/*"/>
	                <exclude name="node_modules/**"/>
        	        <exclude name="package-lock.json"/>
               </fileset>
           </delete>


           <copy todir="${omni.src.dir}/omni-services/nodeJs/" overwrite="true" >
            	<fileset dir="${omni.src.dir}/omni-services/">
                	<exclude name="nodeJs/**"/>
            	</fileset>
           </copy>

	    <replace file="${omni.src.dir}/omni-services/nodeJs/app/config/config.js" replacefilterfile="build_local.properties">
            <!--    <replacefilter token="@@NODE_JDSERVER_PORT@@" value="${@@NODE_JDSERVER_PORT@@}"/>
                <replacefilter token="@@NODE_REACT_PORT@@" value="${@@NODE_REACT_PORT@@}"/> -->
                <replacefilter token="@@MYSQL_PRIMARY_HOST@@" value="${@@MYSQL_PRIMARY_HOST@@}"/>
                <replacefilter token="@@MYSQL_NODE_USERNAME@@" value="${@@MYSQL_NODE_USERNAME@@}"/>
                <replacefilter token="@@MYSQL_NODE_PASSWORD@@" value="${@@MYSQL_NODE_PASSWORD@@}"/>
                <replacefilter token="@@MYSQL_DATABASE@@" value="${@@MYSQL_DATABASE@@}"/>
                <replacefilter token="@@MYSQL_SECONDARY_HOST@@" value="${@@MYSQL_SECONDARY_HOST@@}"/>
                <replacefilter token="@@MYSQL_NODE_USERNAME@@" value="${@@MYSQL_NODE_USERNAME@@}"/>
                <replacefilter token="@@MYSQL_NODE_PASSWORD@@" value="${@@MYSQL_NODE_PASSWORD@@}"/>
                <replacefilter token="@@MYSQL_DATABASE_NAME@@" value="${@@MYSQL_DATABASE_NAME@@}"/>
                <replacefilter token="@@SMS_DATABASE_HOST@@" value="${@@SMS_DATABASE_HOST@@}"/>
                <replacefilter token="@@SMS_DATABASE_PORT@@" value="${@@SMS_DATABASE_PORT@@}"/>
                <replacefilter token="@@SMS_DATABASE_USERNAME@@" value="${@@SMS_DATABASE_USERNAME@@}"/>
                <replacefilter token="@@SMS_DATABASE_PASSWORD@@" value="${@@SMS_DATABASE_PASSWORD@@}"/>
                <replacefilter token="@@SMS_DATABASE_NAME@@" value="${@@SMS_DATABASE_NAME@@}"/>
                <replacefilter token="@@NODE_ENVIRONMENT@@" value="${@@NODE_ENVIRONMENT@@}"/>
                <replacefilter token="@@SERVER_HOST@@" value="${@@SERVER_HOST@@}"/>
                <replacefilter token="@@MARKETPLACE_HOST@@" value="${@@MARKETPLACE_HOST@@}"/>
                <replacefilter token="@@MARKETPLACE_PORT@@" value="${@@MARKETPLACE_PORT@@}"/>
                <replacefilter token="@@IMAGE_HOST@@" value="${@@IMAGE_HOST@@}"/>
                <replacefilter token="@@NODE_ENVIRONMENT@@" value="${@@NODE_ENVIRONMENT@@}"/>
                <replacefilter token="@@SHOP_DOMAIN@@" value="${@@SHOP_DOMAIN@@}"/>
                <replacefilter token="@@SOLAR_HOST@@" value="${@@SOLAR_HOST@@}"/>
                <replacefilter token="@@SOLAR_PORT@@" value="${@@SOLAR_PORT@@}"/>
                <replacefilter token="@@SOLAR_PRODUCT_PORT@@" value="${@@SOLAR_PRODUCT_PORT@@}"/>
                <replacefilter token="@@ONLINE_DOMAIN@@" value="${@@ONLINE_DOMAIN@@}"/>
                <replacefilter token="@@EDIT_DOMAIN@@" value="${@@EDIT_DOMAIN@@}"/>
                <replacefilter token="@@PREVIEW_DOMAIN@@" value="${@@PREVIEW_DOMAIN@@}"/>
                <replacefilter token="@@REDIS.HOST.IP@@" value="${@@REDIS.HOST.IP@@}"/>
                <replacefilter token="@@REDIS.HOST.PORT@@" value="${@@REDIS.HOST.PORT@@}"/>
                <replacefilter token="@@REDIS.PASSWORD@@" value="${@@REDIS.PASSWORD@@}"/>
                <replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
                <replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
                <replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
            <!--    <replacefilter token="@@NODE_WEBSITE_PORT@@" value="${@@NODE_WEBSITE_PORT@@}"/>
                <replacefilter token="@@NODE_DOMAINWEBSITE_PORT@@" value="${@@NODE_DOMAINWEBSITE_PORT@@}"/> -->
                <replacefilter token="@@KYC_HOST@@" value="${@@KYC_HOST@@}"/>
                <replacefilter token="@@GENERIC_ACCESS_HOST@@" value="${@@GENERIC_ACCESS_HOST@@}"/>
                <replacefilter token="@@SERVER_REVISION@@" value="${srev}"/>
                <replacefilter token="@@MONGO.PHP.CONNECTION.URL@@" value="${@@MONGO.PHP.CONNECTION.URL@@}"/>
		<replacefilter token="@@SERVICE_CONTRACT_URL@@" value="${@@SERVICE_CONTRACT_URL@@}"/>
                <replacefilter token="@@FINANCE_URL_JDBOX@@" value="${@@FINANCE_URL_JDBOX@@}"/>
		<replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
		<replacefilter token="@@SECURE_PG@@" value="${@@SECURE_PG@@}"/>
		<replacefilter token="@@SECURE_PG_API@@" value="${@@SECURE_PG_API@@}"/>
		<replacefilter token="@@MKT_API@@" value="${@@MKT_API@@}"/>
		<replacefilter token="@@GSTN_API@@" value="${@@GSTN_API@@}"/>
		<replacefilter token="@@OMNI_CHECKOUT_PATH@@" value="${@@OMNI_CHECKOUT_PATH@@}"/>
		<replacefilter token="@@BASE_URL@@" value="${@@BASE_URL@@}"/>
		<replacefilter token="@@YOW_URL@@" value="${@@YOW_URL@@}"/>
		<replacefilter token="@@srev@@" value="${srev}${time}"/>
		<replacefilter token="@@API_REV@@" value="${srev}-${current_apitime}${APICACHED}"/>
		<replacefilter token="@@SAN.BASE.DIR@@" value="${@@SAN.BASE.DIR@@}"/>
		<replacefilter token="@@JD_MARKETPLACE_HOST@@" value="${@@JD_MARKETPLACE_HOST@@}"/>
		<replacefilter token="@@SALES_DASHBOARD_DOMAIN@@" value="${@@SALES_DASHBOARD_DOMAIN@@}"/>

	    </replace>

	    <replace file="${omni.src.dir}/omni-services/nodeJs/package.json" replacefilterfile="build_local.properties">
	    	<replacefilter token="@@JD_NODE_ENV@@" value="${@@JD_NODE_ENV@@}" />
	    </replace>

	    <exec executable="/usr/bin/npm" dir="${omni.src.dir}/omni-services/nodeJs/" failonerror="false">
	    	<arg line="install" />
	    </exec>
	    <exec executable="/usr/bin/npm" dir="${omni.src.dir}/omni-services/nodeJs/" failonerror="false">
            <arg line="run install-dependencies" />
        </exec>
	   <echo message="Omni-Service Target Completed" />
<record name="/home/mpweb/work/projects/omni_service.txt" action="stop" />
</target>

<target name="omni-webstore">
<record name="/home/mpweb/work/projects/omni_webstore.txt" action="start" append="false" />
		   <echo message="Omni-Webstore Target Called" />
           <delete includeemptydirs="true" failonerror="false">
               <fileset dir="${git.src.dir}/webstore/target">
                        <include name="**/*"/>
                        <exclude name="node_modules/**"/>
                        <exclude name="package-lock.json"/>
               </fileset>
           </delete>

           <copy todir="${git.src.dir}/webstore/target/" overwrite="true" >
                <fileset dir="${git.src.dir}/webstore/">
                        <exclude name="target/**"/>
                </fileset>
           </copy>

	   <replace file="${git.src.dir}/webstore/target/app/shopfront/config.js" replacefilterfile="build_local.properties">

			<replacefilter token="@@MYSQL.HOST@@" value="${@@MYSQL.HOST@@}"/>
			<replacefilter token="@@MYSQL.USER@@" value="${@@MYSQL.USER@@}"/>
			<replacefilter token="@@MYSQL.USER.PHP@@" value="${@@MYSQL.USER.PHP@@}"/>
			<replacefilter token="@@MYSQL.PASSWORD@@" value="${@@MYSQL.PASSWORD@@}"/>
			<replacefilter token="@@MYSQL.PASSWORD.PHP@@" value="${@@MYSQL.PASSWORD.PHP@@}"/>
			<replacefilter token="@@MYSQL.SCHEMA@@" value="${@@MYSQL.SCHEMA@@}"/>
			<replacefilter token="@@MONGO.HOST.IP@@" value="${@@MONGO.HOST.IP@@}"/>
			<replacefilter token="@@MONGO.HOST.PORT@@" value="${@@MONGO.HOST.PORT@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.HOST@@" value="${@@SMS.EMAIL.SERVER.HOST@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.USER@@" value="${@@SMS.EMAIL.SERVER.USER@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.PASSWORD@@" value="${@@SMS.EMAIL.SERVER.PASSWORD@@}"/>
			<replacefilter token="@@SMS.EMAIL.SERVER.SCHEMA@@" value="${@@SMS.EMAIL.SERVER.SCHEMA@@}"/>
			<replacefilter token="@@MONGO.PHP.CONNECTION.URL@@" value="${@@MONGO.PHP.CONNECTION.URL@@}"/>
			<replacefilter token="@@SERVER_URL@@" value="${@@SERVER_URL@@}"/>
			<replacefilter token="@@LIVE_URL@@" value="${@@LIVE_URL@@}"/>
			<replacefilter token="@@SHOP_URL@@" value="${@@SHOP_URL@@}"/>
			<replacefilter token="@@PREVIEW_URL@@" value="${@@PREVIEW_URL@@}"/>
			<replacefilter token="@@SHOP_JD_URL@@" value="${@@SHOP_JD_URL@@}"/>
			<replacefilter token="@@CMS_SHOP_URL@@" value="${@@CMS_SHOP_URL@@}"/>
			<replacefilter token="@@CMSSITE_SHOP_URL@@" value="${@@CMSSITE_SHOP_URL@@}"/>
			<replacefilter token="@@DEMO_SHOP_SUPID@@" value="${@@DEMO_SHOP_SUPID@@}"/>
			<replacefilter token="@@SOLR_BASE_URL@@" value="${@@SOLR_BASE_URL@@}"/>
			<replacefilter token="@@SOLR_BASE_URL_AUTOSUGGEST@@" value="${@@SOLR_BASE_URL_AUTOSUGGEST@@}"/>
			<replacefilter token="@@SOLR_BASE_URL_JUSTDIAL@@" value="${@@SOLR_BASE_URL_JUSTDIAL@@}"/>
			<replacefilter token="@@SOLR_BASE_URL_ALLCORE@@" value="${@@SOLR_BASE_URL_ALLCORE@@}"/>
			<replacefilter token="@@BILL_PAYMENT_URL@@" value="${@@BILL_PAYMENT_URL@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@PSV_IMAGE_BASE_PATH@@" value="${@@PSV_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
			<replacefilter token="@@AMAZON_ACCESS_KEY_ID@@" value="${@@AMAZON_ACCESS_KEY_ID@@}"/>
			<replacefilter token="@@AMAZON_SECRET_ACCESS_KEY@@" value="${@@AMAZON_SECRET_ACCESS_KEY@@}"/>
			<replacefilter token="@@ECS.SDK.LOCATION@@" value="${@@ECS.SDK.LOCATION@@}"/>
			<replacefilter token="@@SAN.BASE.DIR@@" value="${@@SAN.BASE.DIR@@}"/>
			<replacefilter token="@@SAN.BASE.DIR.NEW@@" value="${@@SAN.BASE.DIR.NEW@@}"/>
			<replacefilter token="@@MYSQL_ALLOWED_OPERATIONS@@" value="${@@MYSQL_ALLOWED_OPERATIONS@@}"/>
			<replacefilter token="@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@" value="${@@IMAGE_UPLOAD_WINDOW_IN_DAYS@@}"/>
			<replacefilter token="@@STATIC_HOME@@" value="${@@STATIC_HOME@@}"/>
      		        <replacefilter token="@@JDOMNI_LOCAL_IMAGE_DOMAIN@@" value="${@@JDOMNI_LOCAL_IMAGE_DOMAIN@@}"/>
		        <replacefilter token="@@MYSQL.HOST.SLAVE@@" value="${@@MYSQL.HOST.SLAVE@@}"/>
		        <replacefilter token="@@MYSQL.SLAVE.HOSTS@@" value="${@@MYSQL.SLAVE.HOSTS@@}"/>
		        <replacefilter token="@@MYSQL.SLAVE_58.HOST@@" value="${@@MYSQL.SLAVE_58.HOST@@}"/>
		        <replacefilter token="@@MYSQL.SOLR_SLAVE_57.HOST@@" value="${@@MYSQL.SOLR_SLAVE_57.HOST@@}"/>
		    	<replacefilter token="@@SERVICE_CONTRACT_URL@@" value="${@@SERVICE_CONTRACT_URL@@}"/>
		    	<replacefilter token="@@REDIS.HOST.IP@@" value="${@@REDIS.HOST.IP@@}"/>
		    	<replacefilter token="@@REDIS.HOST.PORT@@" value="${@@REDIS.HOST.PORT@@}"/>
		    	<replacefilter token="@@REDIS.PASSWORD@@" value="${@@REDIS.PASSWORD@@}"/>
		    	<replacefilter token="@@REDIS_PREFIX_KEY@@" value="${@@REDIS_PREFIX_KEY@@}" />
		    	<replacefilter token="@@REDIS_JD.HOST.IP@@" value="${@@REDIS_JD.HOST.IP@@}"/>
		    	<replacefilter token="@@REDIS_JD.HOST.PORT@@" value="${@@REDIS_JD.HOST.PORT@@}"/>
		    	<replacefilter token="@@REDIS_JD.PASSWORD@@" value="${@@REDIS_JD.PASSWORD@@}"/>
		    	<replacefilter token="@@REDIS_JD_PREFIX_KEY@@" value="${@@REDIS_JD_PREFIX_KEY@@}" />
			<replacefilter token="@@JD_BUILDER_URL@@" value="${@@JD_BUILDER_URL@@}"/>
			<replacefilter token="@@REPORTS_URL@@" value="${@@REPORTS_URL@@}"/>
			<replacefilter token="@@LME_CLIENT_ID@@" value="${@@LME_CLIENT_ID@@}"/>
			<replacefilter token="@@LME_CLIENT_SECRET@@" value="${@@LME_CLIENT_SECRET@@}"/>
			<replacefilter token="@@LME_API_URL@@" value="${@@LME_API_URL@@}"/>
			<replacefilter token="@@LME_REDIRECT_URL@@" value="${@@LME_REDIRECT_URL@@}"/>
			<replacefilter token="@@HTTPS_SERVER_URL@@" value="${@@HTTPS_SERVER_URL@@}"/>
			<replacefilter token="@@MYSQL.MULTI.HOSTS@@" value="${@@MYSQL.MULTI.HOSTS@@}"/>
			<replacefilter token="@@MYSQL.CRON.READ.HOST@@" value="${@@MYSQL.CRON.READ.HOST@@}"/>
			<replacefilter token="@@MYSQL.CRON.WRITE.HOST@@" value="${@@MYSQL.CRON.WRITE.HOST@@}"/>
			<replacefilter token="@@MYSQL.CRON.USER@@" value="${@@MYSQL.CRON.USER@@}"/>
			<replacefilter token="@@MYSQL.CRON.PASSWORD.PHP@@" value="${@@MYSQL.CRON.PASSWORD.PHP@@}"/>
			<replacefilter token="@@MYSQL.MULTI_SLAVE.HOSTS@@" value="${@@MYSQL.MULTI_SLAVE.HOSTS@@}"/>
			<replacefilter token="@@TRANSLITERATION.SERVER.HOST@@" value="${@@TRANSLITERATION.SERVER.HOST@@}"/>
			<replacefilter token="@@TRANSLITERATION.SERVER.SCHEMA@@" value="${@@TRANSLITERATION.SERVER.SCHEMA@@}"/>
			<replacefilter token="@@STATICIMG_DOMAIN@@" value="${@@STATICIMG_DOMAIN@@}"/>
			<replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}"/>
			<replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}"/>
			<replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}"/>
			<replacefilter token="@@staticIp4@@" value="${@@STATIC_IP4@@}"/>
			<replacefilter token="@@staticIp5@@" value="${@@STATIC_IP5@@}"/>
			<replacefilter token="@@PINCODE.LATLONG.SERVER@@" value="${@@PINCODE.LATLONG.SERVER@@}"/>	
			<replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
			<replacefilter token="@@DOCTOR_URL@@" value="${@@DOCTOR_URL@@}"/>
			<replacefilter token="@@DIALER_SCHEMA@@" value="${@@DIALER_SCHEMA@@}"/>
			<replacefilter token="@@DIALER_USERNAME@@" value="${@@DIALER_USERNAME@@}"/>
			<replacefilter token="@@DIALER_PASSWORD@@" value="${@@DIALER_PASSWORD@@}"/>
            		<replacefilter token="@@OFFERS_URL@@" value="${@@OFFERS_URL@@}"/>
		    	<replacefilter token="@@API_1@@" value="${@@API_1@@}"/>
            		<replacefilter token="@@API_2@@" value="${@@API_2@@}"/>
            		<replacefilter token="@@API_3@@" value="${@@API_3@@}"/>
            		<replacefilter token="@@MKTAPI_URL@@" value="${@@MKTAPI_URL@@}"/>
            		<replacefilter token="@@ENV@@" value="${@@ENV@@}"/>
            		<replacefilter token="@@SECUREPG@@" value="${@@SECUREPG@@}"/>
            		<replacefilter token="@@SECUREPG_INFOURL@@" value="${@@SECUREPG_INFOURL@@}"/>
            		<replacefilter token="@@BASE_URL@@" value="${@@BASE_URL@@}"/>
			<replacefilter token="@@APP_HOST_KEY@@" value="${@@APP_HOST_KEY@@}"/>
			<replacefilter token="@@ORDER_MESSAGE_HOST@@" value="${@@ORDER_MESSAGE_HOST@@}"/>
			<replacefilter token="@@ORDER_MESSAGE_USER@@" value="${@@ORDER_MESSAGE_USER@@}"/>
			<replacefilter token="@@ORDER_MESSAGE_PASSWORD@@" value="${@@ORDER_MESSAGE_PASSWORD@@}"/>
			<replacefilter token="@@KYC_INVOICE_IMAGE_DOMAIN@@" value="${@@KYC_INVOICE_IMAGE_DOMAIN@@}"/>
			<replacefilter token="@@KYC_HOST@@" value="${@@KYC_HOST@@}"/>
			<replacefilter token="@@APIDOMAIN@@" value="${@@APIDOMAIN@@}"/>
			<replacefilter token="@@CATEGORY_APIDOMAIN@@" value="${@@CATEGORY_APIDOMAIN@@}"/>
			<replacefilter token="@@PAYMENT_ENV@@" value="${@@PAYMENT_ENV@@}"/>
			<replacefilter token="@@TRAC_SERVER@@" value="${@@TRAC_SERVER@@}"/>
			<replacefilter token="@@TRAC_USER@@" value="${@@TRAC_USER@@}"/>
			<replacefilter token="@@TRAC_PSWD@@" value="${@@TRAC_PSWD@@}"/>
			<replacefilter token="@@VERTICAL_APIS@@" value="${@@VERTICAL_APIS@@}"/>
			<replacefilter token="@@GST_PERCENT@@" value="${@@GST_PERCENT@@}"/>
			<replacefilter token="@@srev@@" value="${srev}${time}"/>
			<replacefilter token="@@API_REV@@" value="${srev}-${current_apitime}${APICACHED}"/>

	   </replace>
	   	<replace file="${git.src.dir}/webstore/target/package.json" replacefilterfile="build_local.properties">
	   		<replacefilter token="@@WEBSTORE_ENV@@" value="${@@WEBSTORE_ENV@@}" />
	   	</replace>

            <exec executable="/usr/bin/npm" dir="${git.src.dir}/webstore/target/" failonerror="false">
                <arg line="install --production" />
            </exec>
             <exec executable="/usr/bin/npm" dir="${git.src.dir}/webstore/target/" failonerror="false">
            	<arg line="run install-dependencies" />
        	</exec>

            <parallel>
		    	<exec executable="/usr/bin/npm" dir="${git.src.dir}/webstore/target/" failonerror="false">
	                <arg line="run deployment" />
	            </exec>

	            <exec executable="/usr/bin/npm" dir="${git.src.dir}/webstore/target/" failonerror="false">
	                <arg line="run deploymentWebpack" />
	            </exec>
	            <exec executable="/usr/bin/npm" dir="${git.src.dir}/webstore/target/" failonerror="false">
	                <arg line="run deploymentMicro" />
	            </exec>
	            <exec executable="/usr/bin/npm" dir="${git.src.dir}/webstore/target/" failonerror="false">
	                <arg line="run deploymentMicroProd" />
	            </exec>
		    	
	        </parallel>
	        <exec executable="/usr/bin/npm" dir="${git.src.dir}/webstore/target/" failonerror="false">
	            <arg line="run build" />
	        </exec>
        <echo message="Omni-Webstore Target Completed" />    
<record name="/home/mpweb/work/projects/omni_webstore.txt" action="stop"/>
</target>

<target name="deploy-omni-webstore-copy" >
            <copy todir="${@@STATIC_HOME@@}/static/webstore/dist" overwrite="true" >
            	<fileset dir="${git.src.dir}/webstore/target/dist"> </fileset>
            </copy>
</target>

<target name="omni-automation-tools">
	<record name="/home/mpweb/work/projects/omni_automation_tools.txt" action="start" append="false" />
	<echo message="Omni-Automation-Tools Target Called" />

        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${git.src.dir}/omni-automation-tools/target">
                <include name="**/*"/>
                <exclude name="node_modules/**"/>
                <exclude name="package-lock.json"/>
            </fileset>
        </delete>

        <copy todir="${git.src.dir}/omni-automation-tools/target/" overwrite="true" >
            <fileset dir="${git.src.dir}/omni-automation-tools/">
                <exclude name="target/**"/>
            </fileset>
        </copy>
        <replace file="${git.src.dir}/omni-automation-tools/target/package.json" replacefilterfile="build_local.properties">
        	<replacefilter token="@@OMNI_HOME_ENV@@" value="${@@OMNI_HOME_ENV@@}" />
        </replace>
        <replace dir="${git.src.dir}/omni-automation-tools/target/src/config" replacefilterfile="build_local.properties">
            <replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}" />
            <replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}" />
            <replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}" />
            <replacefilter token="@@API_1@@" value="${@@API_1@@}" />
            <replacefilter token="@@API_2@@" value="${@@API_2@@}" />
            <replacefilter token="@@API_3@@" value="${@@API_3@@}" />
	    <replacefilter token="@@TRAC_SERVER_HOST@@" value="${@@TRAC_SERVER_HOST@@}" />
	    <replacefilter token="@@TRAC_SERVER_PORT@@" value="${@@TRAC_SERVER_PORT@@}" />
	    <replacefilter token="@@TRAC_USER@@" value="${@@TRAC_USER@@}" />
	    <replacefilter token="@@TRAC_PSWD@@" value="${@@TRAC_PSWD@@}" />
	    <replacefilter token="@@MYSQL_PRIMARY_HOST@@" value="${@@MYSQL_PRIMARY_HOST@@}"/>
            <replacefilter token="@@MYSQL_NODE_USERNAME@@" value="${@@MYSQL_NODE_USERNAME@@}"/>
            <replacefilter token="@@MYSQL_NODE_PASSWORD@@" value="${@@MYSQL_NODE_PASSWORD@@}"/>
            <replacefilter token="@@MYSQL_DATABASE@@" value="${@@MYSQL_DATABASE@@}"/>
	</replace>

        <exec executable="/usr/bin/npm" dir="${git.src.dir}/omni-automation-tools/target/" failonerror="false">
            <arg line="install --production" />
        </exec>

        <exec executable="/usr/bin/npm" dir="${git.src.dir}/omni-automation-tools/target/" failonerror="false">
            <arg line="run install-dependencies" />
        </exec>

        <parallel>
        	<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni-automation-tools/target/" failonerror="false">
    			<arg line="run dev-deployment" />
        	</exec>
        	<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni-automation-tools/target/" failonerror="false">
    			<arg line="run prod-deployment" />
        	</exec>
        	<exec executable="/usr/bin/npm" dir="${git.src.dir}/omni-automation-tools/target/" failonerror="false">
    			<arg line="run server-deployment" />
        	</exec>
        </parallel> 
        <echo message="Omni-Automation-Tools Target completed" />

	<record name="/home/mpweb/work/projects/omni_automation_tools.txt" action="stop" />
</target>

<target name="deploy-justdial-misc" >
        <record name="/home/mpweb/work/projects/justdial-misc.txt" action="start" append="false" />
                <echo message="justdial-misc Target Called" />
                <exec executable="/usr/bin/git" dir="${git.src.dir}/justdial-misc" outputproperty="JUSTDIAL_MISC_REV">
            <arg line="rev-parse HEAD" />
                </exec>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${git.src.dir}/justdial-misc/target">
                <include name="**/*"/>
                <exclude name="node_modules/**"/>
                <exclude name="package-lock.json"/>
            </fileset>
        </delete>


                <copy todir="${git.src.dir}/justdial-misc/target/" overwrite="true" >
            <fileset dir="${git.src.dir}/justdial-misc/">
                <exclude name="target/**"/>
            </fileset>
                </copy>
            <replace file="${git.src.dir}/justdial-misc/target/package.json" replacefilterfile="build_local.properties">
            	<replacefilter token="@@JUSTDIAL_MISC_ENV@@" value="${@@JUSTDIAL_MISC_ENV@@}" />
            </replace>
                <replace dir="${git.src.dir}/justdial-misc/target/src/config" replacefilterfile="build_local.properties">
            <replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}" />
            <replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}" />
            <replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}" />
            <replacefilter token="@@API_1@@" value="${@@API_1@@}" />
            <replacefilter token="@@API_2@@" value="${@@API_2@@}" />
            <replacefilter token="@@API_3@@" value="${@@API_3@@}" />
            <replacefilter token="@@JUSTDIAL_MISC_REV@@" value="${JUSTDIAL_MISC_REV}" />
            <replacefilter token="@@IMAGE_DOMAIN_ONE@@" value="${@@IMAGE_DOMAIN_ONE@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_TWO@@" value="${@@IMAGE_DOMAIN_TWO@@}"/>
			<replacefilter token="@@IMAGE_DOMAIN_THREE@@" value="${@@IMAGE_DOMAIN_THREE@@}"/>
			<replacefilter token="@@PRODUCT_IMAGE_BASE_PATH@@" value="${@@PRODUCT_IMAGE_BASE_PATH@@}"/>
			<replacefilter token="@@IMAGE_COMPRESSION@@" value="${@@IMAGE_COMPRESSION@@}"/>
			<replacefilter token="@@SAN.BASE.DIR@@" value="${@@SAN.BASE.DIR@@}"/>
	    	<replacefilter token="@@REDIS.HOST.IP@@" value="${@@REDIS.HOST.IP@@}"/>
	    	<replacefilter token="@@REDIS.HOST.PORT@@" value="${@@REDIS.HOST.PORT@@}"/>
	    	<replacefilter token="@@REDIS.PASSWORD@@" value="${@@REDIS.PASSWORD@@}"/>
			<replacefilter token="@@SALES_DASHBOARD_DOMAIN@@" value="${@@SALES_DASHBOARD_DOMAIN@@}"/>
			<replacefilter token="@@MYSQL_PRIMARY_HOST@@" value="${@@MYSQL_PRIMARY_HOST@@}"/>
            <replacefilter token="@@MYSQL_NODE_USERNAME@@" value="${@@MYSQL_NODE_USERNAME@@}"/>
            <replacefilter token="@@MYSQL_NODE_PASSWORD@@" value="${@@MYSQL_NODE_PASSWORD@@}"/>
            <replacefilter token="@@MYSQL_DATABASE@@" value="${@@MYSQL_DATABASE@@}"/>
            <replacefilter token="@@NODE_ENVIRONMENT@@" value="${@@NODE_ENVIRONMENT@@}"/>
                </replace>
                <exec executable="/usr/bin/npm" dir="${git.src.dir}/justdial-misc/target/" failonerror="false">
                        <arg line="install --production" />
                </exec>

                <exec executable="/usr/bin/npm" dir="${git.src.dir}/justdial-misc/target/" failonerror="false">
            <arg line="run install-dependencies" />
                </exec>
                <parallel>
                	<exec executable="/usr/bin/npm" dir="${git.src.dir}/justdial-misc/target/" failonerror="false">
            			<arg line="run dev-deployment" />
                	</exec>
                	<exec executable="/usr/bin/npm" dir="${git.src.dir}/justdial-misc/target/" failonerror="false">
            			<arg line="run prod-deployment" />
                	</exec>
                	<exec executable="/usr/bin/npm" dir="${git.src.dir}/justdial-misc/target/" failonerror="false">
            			<arg line="run server-deployment" />
                	</exec>
                </parallel>   
                <echo message="justdial-misc Target completed" />
        <record name="/home/mpweb/work/projects/justdial-misc.txt" action="stop" />
    </target>

	<target name="backend-internal" >
		<echo message="backend-internal Target Called" />

		<delete includeemptydirs="true" failonerror="false">
		    <fileset dir="${git.src.dir}/backend-internal/backend-internal">
		        <include name="**/*"/>
		        <exclude name="node_modules/**"/>
		        <exclude name="package-lock.json"/>
		    </fileset>
		</delete>


		<copy todir="${git.src.dir}/backend-internal/backend-internal/" overwrite="true" >
		    <fileset dir="${git.src.dir}/backend-internal/">
		        <exclude name="backend-internal/**"/>
		    </fileset>
		</copy>
		<replace dir="${git.src.dir}/backend-internal/backend-internal" replacefilterfile="build_local.properties">
		<replacefilter token="@@REDIS.HOST.IP@@" value="${@@REDIS.HOST.IP@@}"/>
		<replacefilter token="@@REDIS.HOST.PORT@@" value="${@@REDIS.HOST.PORT@@}"/>
		<replacefilter token="@@REDIS.PASSWORD@@" value="${@@REDIS.PASSWORD@@}"/>
		<replacefilter token="@@MYSQL.HOST@@" value="${@@MYSQL.HOST@@}"/>
		<replacefilter token="@@MYSQL.USER@@" value="${@@MYSQL.USER@@}"/>
		<replacefilter token="@@MYSQL.PASSWORD@@" value="${@@MYSQL.PASSWORD@@}"/>
		<replacefilter token="@@MYSQL.SCHEMA@@" value="${@@MYSQL.SCHEMA@@}"/>
                <replacefilter token="@@SALES_DASHBOARD_PORT@@" value="${@@SALES_DASHBOARD_PORT@@}"/>

		</replace>

		<exec executable="/usr/bin/npm" dir="${git.src.dir}/backend-internal/backend-internal/" failonerror="false">
		    <arg line="install" />
		</exec>


	</target>

	<target name="jd-vendor" >
		<record name="/home/mpweb/work/projects/jd-vendor.txt" action="start" append="false" />
		<echo message="Jd-Vendor Target Called" />
		<exec executable="/usr/bin/git" dir="${git.src.dir}/jd-vendor" outputproperty="OMNI_JD_VENDOR_REV">
			<arg line="rev-parse HEAD" />
		</exec>

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${git.src.dir}/jd-vendor/target">
				<include name="**/*"/>
				<exclude name="node_modules/**"/>
				<exclude name="package-lock.json"/>
			</fileset>
		</delete>

		<copy todir="${git.src.dir}/jd-vendor/target/" overwrite="true" >
			<fileset dir="${git.src.dir}/jd-vendor/">
				<exclude name="target/**"/>
			</fileset>
		</copy>
		<replace file="${git.src.dir}/jd-vendor/target/package.json" replacefilterfile="build_local.properties">
			<replacefilter token="@@OMNI_HOME_ENV@@" value="${@@OMNI_HOME_ENV@@}" />
		</replace>
		<replace dir="${git.src.dir}/jd-vendor/target/src/config" replacefilterfile="build_local.properties">
				<replacefilter token="@@staticIp1@@" value="${@@STATIC_IP1@@}" />
                <replacefilter token="@@staticIp2@@" value="${@@STATIC_IP2@@}" />
                <replacefilter token="@@staticIp3@@" value="${@@STATIC_IP3@@}" />
                <replacefilter token="@@API_1@@" value="${@@API_1@@}" />
                <replacefilter token="@@API_2@@" value="${@@API_2@@}" />
                <replacefilter token="@@API_3@@" value="${@@API_3@@}" />
                <replacefilter token="OMNI_JD_VENDOR_REV" value="${OMNI_JD_VENDOR_REV}" />
		</replace>

		<exec executable="/usr/bin/npm" dir="${git.src.dir}/jd-vendor/target/" failonerror="false">
			<arg line="install --production" />
		</exec>

                <exec executable="/usr/bin/npm" dir="${git.src.dir}/jd-vendor/target/" failonerror="false">
                        <arg line="run install-dependencies" />
                </exec>

                <parallel>
                	<exec executable="/usr/bin/npm" dir="${git.src.dir}/jd-vendor/target/" failonerror="false">
            			<arg line="run dev-deployment" />
                	</exec>
                	<exec executable="/usr/bin/npm" dir="${git.src.dir}/jd-vendor/target/" failonerror="false">
            			<arg line="run prod-deployment" />
                	</exec>
                	<exec executable="/usr/bin/npm" dir="${git.src.dir}/jd-vendor/target/" failonerror="false">
            			<arg line="run server-deployment" />
                	</exec>
                </parallel>  
		<echo message="Jd-Vendor Target completed" />
		<record name="/home/mpweb/work/projects/jd-vendor.txt" action="stop" />
	</target>
	
	<target name="jd-emails" >
		<record name="/home/mpweb/work/projects/jd-emails.txt" action="start" append="false" />
		<echo message="Jd-Emails Target Called" />

                <delete includeemptydirs="true" failonerror="false">
                        <fileset dir="${git.src.dir}/jd-emails/target">
                                <include name="**/*"/>
                                <exclude name="node_modules/**"/>
                                <exclude name="package-lock.json"/>
                        </fileset>
                </delete>

		<copy todir="${git.src.dir}/jd-emails/target/" overwrite="true" >
                        <fileset dir="${git.src.dir}/jd-emails/">
                                <exclude name="target/**"/>
                        </fileset>
                </copy>

                <exec executable="/usr/bin/npm" dir="${git.src.dir}/jd-emails/target/" failonerror="false">
                        <arg line="install --production" />
                </exec>


                <exec executable="/usr/bin/npm" dir="${git.src.dir}/jd-emails/target/" failonerror="false">
                        <arg line="run deployment" />
                </exec>
                <echo message="Jd-Emails Target completed" />
                <record name="/home/mpweb/work/projects/jd-emails.txt" action="stop" />

	</target>

	<target name="java-package" description="Call mvn package with test. If you want to skip test add -Dmaven.test.skip=true" depends=" revertAll, clean">
            <antcall target="build-static"></antcall>
            <copy todir="${admin.dist.dir}/justdial-admin-web/" overwrite="true" >
                <fileset dir="${static.dist.dir}/">
                </fileset>
            </copy>
            <parallel>
                <sequential>
            <antcall target="replace-config"></antcall>
            <antcall target="replaceVersion"></antcall>
            <replace file="pom.xml" replacefilterfile="build_local.properties"/>
                <replace file="pom.xml" replacefilterfile="build_default.properties"/>

            <taskdef resource="net/sf/antcontrib/antlib.xml">
            <classpath>
                <pathelement location="tools/External_Jars/ant-contrib-1.0b3.jar"/>
            </classpath>
            </taskdef>
    
            <condition property="include.set" else="false">
            <isset property="include"/>
            </condition>


          <if>
            <equals arg1="${include.set}" arg2="false"/>
             <then>
                <echo message="The value of property foo is bar" />
                    <property name="options" value=""/>   
                    <property name="extraOptions" value=""/>     
                   <echo message="-------------------1---------------------" />
                 </then>
                  <else>
                    <echo message="-------------------2-------------------" />
                    <property name="options" value="-pl ${include}"/>     
                    <property name="extraOptions" value="-am"/>   
                 </else>
                </if>

        <condition property="profile.set" else="false">
          <isset property="profile"/>
        </condition>

            <if>
             <equals arg1="${profile.set}" arg2="false"/>
                 <then>
                   <echo message="-------------------3---------------------" />
                    <exec dir="." executable="${mvn}" failonerror="true">
                    <arg line="-T 4C package -P online -Dmaven.test.skip=${skipTest}"/>
                    </exec> 
                 </then>
             <else>
               <echo message="-------------------4---------------------${profile}" />
             <if>
             <equals arg1="${profile}" arg2="deploy-online"/>
                

                 <then>
                    <exec dir="." executable="${mvn}" failonerror="true">
                    <arg line="package -P online -Dmaven.test.skip=${skipTest}"/>
                    </exec> 

                    <exec dir="." executable="${mvn}" failonerror="true">
                        <arg line="deploy -P deploy-online ${options} -Dmaven.test.skip=${skipTest}"/>
                   </exec>             
                 </then>
             <else>
                    <if>
                     <equals arg1="${profile}" arg2="build-online"/>

                     <then>
                          <exec dir="." executable="${mvn}" failonerror="true">
                            <arg line="clean package deploy -f justdial-config/pom.xml -Dmaven.test.skip=${skipTest}"/>
                          </exec> 
                        <exec dir="." executable="${mvn}" failonerror="true">
                            <arg line="package -P build-online -Dmaven.test.skip=${skipTest}"/>
                        </exec> 
                     </then>
                     </if>
                </else>
             </if>      
            </else>
            </if>
          </sequential>
        </parallel>
    </target>

</project>
